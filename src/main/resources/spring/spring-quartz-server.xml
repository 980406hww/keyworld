<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">
	<!-- <bean id="textSentimentSchedule" class="com.opinion.monitoring.schedule.TextSentimentSchedule" /> -->
	<bean id="singleThreadQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="cronTriggerCacheCustomerKeyword" />
				<ref bean="cronTriggerCacheCrawlRankCustomerQZKeyword" />
				<ref bean="cronTriggerCacheCrawlRankCustomerPTKeyword" />
				<ref bean="cronTriggerCacheCheckingEnteredCustomerKeyword" />
				<ref bean="cronTriggerUpdateOptimizedCount" />
			</list>
		</property>
		<!-- Quartz配置, 本地运行无需单独的quartz.properties文件，在此简单配置即可 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">1</prop>
			</props>
		</property>
		<!-- 启动时延期2秒开始任务 -->
		<property name="startupDelay" value="2" />
	</bean>

	<!--缓存关键字信息到队列中-->
	<bean id="cronTriggerCacheCustomerKeyword" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cronTriggerCacheCustomerKeywordSchedule"/>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>

	<bean id="cronTriggerCacheCustomerKeywordSchedule" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cacheCustomerKeywordSchedule" />
		<property name="targetMethod" value="runTask" />
		<property name="concurrent" value="false" />
	</bean>

	<!--缓存全站抓取排名的关键字信息到队列中-->
	<bean id="cronTriggerCacheCrawlRankCustomerQZKeyword" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cronTriggerCacheCrawlRankCustomerQZKeywordSchedule"/>
		<property name="cronExpression" value="0 0/3 * * * ?" />
	</bean>

	<bean id="cronTriggerCacheCrawlRankCustomerQZKeywordSchedule" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cacheCrawlRankCustomerQZKeywordSchedule" />
		<property name="targetMethod" value="runTask" />
		<property name="concurrent" value="false" />
	</bean>

	<!--缓存单词抓取排名的关键字信息到队列中-->
	<bean id="cronTriggerCacheCrawlRankCustomerPTKeyword" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cronTriggerCacheCrawlRankCustomerPTKeywordSchedule"/>
		<property name="cronExpression" value="0 0/3 8-23 * * ?" />
	</bean>

	<bean id="cronTriggerCacheCrawlRankCustomerPTKeywordSchedule" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cacheCrawlRankCustomerPTKeywordSchedule" />
		<property name="targetMethod" value="runTask" />
		<property name="concurrent" value="false" />
	</bean>

	<!--缓存检查收录的关键字信息到队列中-->
	<bean id="cronTriggerCacheCheckingEnteredCustomerKeyword" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cronTriggerCacheCheckingEnteredCustomerKeywordSchedule"/>
		<property name="cronExpression" value="0 0/10 9-23 * * ?" />
	</bean>

	<bean id="cronTriggerCacheCheckingEnteredCustomerKeywordSchedule" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cacheCheckingEnteredCustomerKeywordSchedule" />
		<property name="targetMethod" value="runTask" />
		<property name="concurrent" value="false" />
	</bean>

	<!--缓存更新结果信息到队列中-->
	<bean id="cronTriggerUpdateOptimizedCount" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cronTriggerUpdateOptimizedCountSchedule"/>
		<property name="cronExpression" value="0/20 * * * * ?" />
	</bean>

	<bean id="cronTriggerUpdateOptimizedCountSchedule" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="updateOptimizedCountSchedule" />
		<property name="targetMethod" value="runTask" />
		<property name="concurrent" value="false" />
	</bean>

</beans>