<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keymanager.monitoring.dao.CustomerKeywordDao">
    <sql id="fullColID">
        ck.fUuid	AS	'uuid',
        ck.fTerminalType	AS	'terminalType',
        ck.fCustomerUuid	AS	'customerUuid',
        ck.fKeyword	AS	'keyword',
        ck.fUrl	AS	'url',
        ck.fType	AS	'type',
        ck.fOriginalUrl	AS	'originalUrl',
        ck.fTitle	AS	'title',
        ck.fSequence	AS	'sequence',
        ck.fCaptureTitleQueryTime	AS	'captureTitleQueryTime',
        ck.fCapturedTitle	AS	'capturedTitle',
        ck.fAutoUpdateNegativeDateTime	AS	'autoUpdateNegativeDateTime',
        ck.fBigKeyword	AS	'bigKeyword',
        ck.fSnapshotDateTime	AS	'snapshotDateTime',
        ck.fSearchEngine	AS	'searchEngine',
        ck.fInitialIndexCount	AS	'initialIndexCount',
        ck.fInitialPosition	AS	'initialPosition',
        ck.fCurrentIndexCount	AS	'currentIndexCount',
        ck.fCurrentPosition	AS	'currentPosition',
        ck.fQueryDate	AS	'queryDate',
        ck.fQueryCount	AS	'queryCount',
        ck.fInvalidRefreshCount	AS	'invalidRefreshCount',
        ck.fQueryTime	AS	'queryTime',
        ck.fQueryInterval	AS	'queryInterval',
        ck.fServiceProvider	AS	'serviceProvider',
        ck.fOptimizeGroupName	AS	'optimizeGroupName',
        ck.fOptimizePlanCount	AS	'optimizePlanCount',
        ck.fOptimizedCount	AS	'optimizedCount',
        ck.fOptimizedPercentage	AS	'optimizedPercentage',
        ck.fOptimizeDate	AS	'optimizeDate',
        ck.fLastOptimizeDateTime	AS	'lastOptimizeDateTime',
        ck.fOptimizePositionFirstPercentage	AS	'optimizePositionFirstPercentage',
        ck.fOptimizePositionSecondPercentage	AS	'optimizePositionSecondPercentage',
        ck.fOptimizePositionThirdPercentage	AS	'optimizePositionThirdPercentage',
        ck.fPositionFirstCost	AS	'positionFirstCost',
        ck.fPositionSecondCost	AS	'positionSecondCost',
        ck.fPositionThirdCost	AS	'positionThirdCost',
        ck.fPositionForthCost	AS	'positionForthCost',
        ck.fPositionFifthCost	AS	'positionFifthCost',
        ck.fPositionFirstFee	AS	'positionFirstFee',
        ck.fPositionSecondFee	AS	'positionSecondFee',
        ck.fPositionThirdFee	AS	'positionThirdFee',
        ck.fPositionForthFee	AS	'positionForthFee',
        ck.fPositionFifthFee	AS	'positionFifthFee',
        ck.fPositionFirstPageFee	AS	'positionFirstPageFee',
        ck.fCapturePositionQueryTime	AS	'capturePositionQueryTime',
        ck.fCaptureIndexQueryTime	AS	'captureIndexQueryTime',
        ck.fCollectMethod	AS	'collectMethod',
        ck.fStartOptimizedTime	AS	'startOptimizedTime',
        ck.fEffectiveFromTime	AS	'effectiveFromTime',
        ck.fEffectiveToTime	AS	'effectiveToTime',
        ck.fPaymentEffectiveFromTime	AS	'paymentEffectiveFromTime',
        ck.fPaymentEffectiveToTime	AS	'paymentEffectiveToTime',
        ck.fRelatedKeywords	AS	'relatedKeywords',
        ck.fPaymentStatus	AS	'paymentStatus',
        ck.fOrderNumber	AS	'orderNumber',
        ck.fRemarks	AS	'remarks',
        ck.fStatus	AS	'status',
        ck.fManualCleanTitle as 'manualCleanTitle',
        ck.fUpdateTime	AS	'updateTime',
        ck.fCreateTime	AS	'createTime'
    </sql>

    <sql id="dailyReportColID">
        ck.fUuid	AS	'uuid',
        ck.fTerminalType	AS	'terminalType',
        ck.fCustomerUuid	AS	'customerUuid',
        ck.fKeyword	AS	'keyword',
        ck.fUrl	AS	'url',
        ck.fOriginalUrl	AS	'originalUrl',
        ck.fTitle	AS	'title',
        ck.fSequence	AS	'sequence',
        ck.fSearchEngine	AS	'searchEngine',
        ck.fInitialIndexCount	AS	'initialIndexCount',
        ck.fInitialPosition	AS	'initialPosition',
        ck.fCurrentIndexCount	AS	'currentIndexCount',
        ck.fCurrentPosition	AS	'currentPosition',
        ck.fPositionFirstFee	AS	'positionFirstFee',
        ck.fPositionSecondFee	AS	'positionSecondFee',
        ck.fPositionThirdFee	AS	'positionThirdFee',
        ck.fPositionForthFee	AS	'positionForthFee',
        ck.fPositionFifthFee	AS	'positionFifthFee',
        ck.fPositionFirstPageFee	AS	'positionFirstPageFee'
    </sql>

    <sql id="searchCustomerKeywordsCriteria">
        <if test="customerKeywordCriteria.customerUuid != null and customerKeywordCriteria.customerUuid != ''">AND ck.fCustomerUuid = #{customerKeywordCriteria.customerUuid}</if>
        <if test="customerKeywordCriteria.keyword != null and customerKeywordCriteria.keyword != ''">AND ck.fKeyword like '${customerKeywordCriteria.keyword}%'</if>
        <if test="customerKeywordCriteria.url != null and customerKeywordCriteria.url != ''">AND ck.fUrl like '%${customerKeywordCriteria.url}%'</if>
        <if test="customerKeywordCriteria.status != null and customerKeywordCriteria.status != ''">AND ck.fStatus = #{customerKeywordCriteria.status}</if>
        <if test="customerKeywordCriteria.invalidRefreshCount != null and customerKeywordCriteria.invalidRefreshCount != ''">AND ck.fInvalidRefreshCount &gt;= #{customerKeywordCriteria.invalidRefreshCount}</if>
        <if test="customerKeywordCriteria.creationFromTime != null and customerKeywordCriteria.creationFromTime != ''">AND ck.fCreateTime >= #{customerKeywordCriteria.creationFromTime}</if>
        <if test="customerKeywordCriteria.creationToTime != null and customerKeywordCriteria.creationToTime != ''">AND ck.fCreateTime &lt;= #{customerKeywordCriteria.creationToTime}</if>
        <if test="customerKeywordCriteria.entryType != null and customerKeywordCriteria.entryType != ''">AND ck.fType = #{customerKeywordCriteria.entryType}</if>
        <if test="customerKeywordCriteria.position != null and customerKeywordCriteria.position != '' and customerKeywordCriteria.noPosition == null "><![CDATA[AND fCurrentPosition > 0 and fCurrentPosition <= #{customerKeywordCriteria.position}  ]]>   </if>
        <if test="customerKeywordCriteria.noPosition == 1 ">AND ck.fCurrentPosition =  0    </if>
        <if test="customerKeywordCriteria.orderNumber != null and customerKeywordCriteria.orderNumber != ''">AND ck.fOrderNumber  like '%${customerKeywordCriteria.orderNumber}%'</if>
        <if test="customerKeywordCriteria.pushPay != null and customerKeywordCriteria.pushPay != ''">AND ((ck.fCollectMethod = 'PerDay' AND ck.fEffectiveToTime is not null) OR (ck.fEffectiveToTime &lt;= DATE_ADD(CURDATE(),INTERVAL 3 DAY))) </if>
        <if test="customerKeywordCriteria.terminalType != null and customerKeywordCriteria.terminalType != ''">AND fTerminalType =  #{customerKeywordCriteria.terminalType} </if>
        <if test="customerKeywordCriteria.optimizedCount != null">AND ck.fOptimizedCount &lt;= #{customerKeywordCriteria.optimizedCount} </if>
        <if test="customerKeywordCriteria.remarks != null and customerKeywordCriteria.remarks != ''">AND ck.fRemarks like '%${customerKeywordCriteria.remarks}%' </if>
        <if test="customerKeywordCriteria.currentIndexCount != null and customerKeywordCriteria.currentIndexCount != ''">AND ck.fCurrentIndexCount &gt;= #{customerKeywordCriteria.currentIndexCount} </if>
        <if test="customerKeywordCriteria.qq != null and customerKeywordCriteria.qq != ''">
            AND c.fQQ LIKE '${customerKeywordCriteria.qq}%'
        </if>
        <if test="customerKeywordCriteria.userName != null and customerKeywordCriteria.userName != ''">
            AND c.fUserID = #{customerKeywordCriteria.userName}
        </if>
        <choose>
            <when test="customerKeywordCriteria.optimizeGroupName != null and customerKeywordCriteria.optimizeGroupName != ''">
                AND ck.fOptimizeGroupName  like '%${customerKeywordCriteria.optimizeGroupName}%'
            </when>
            <otherwise>
                <if test="customerKeywordCriteria.displayStop == null or customerKeywordCriteria.displayStop == ''">
                    AND (ck.fOptimizeGroupName != 'stop')
                </if>
            </otherwise>
        </choose>
        <choose>
            <when test="customerKeywordCriteria.orderingElement != null and customerKeywordCriteria.orderingElement != ''">
                ORDER BY ck.${customerKeywordCriteria.orderingElement}  DESC
            </when>
            <otherwise>
                ORDER BY ck.fKeyword
            </otherwise>
        </choose>
    </sql>

    <update id="cleanSelectedCustomerKeywordTitle">
        UPDATE t_customer_keyword set fTitle = null , fManualCleanTitle = 1 where fUuid in
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
          #{item}
        </foreach>
    </update>

    <update id="cleanCustomerTitle">
        UPDATE t_customer_keyword set fTitle = null , fManualCleanTitle = 1 where fTerminalType = #{terminalType} and fType = #{entryType} and fCustomerUuid = #{customerUuid}
    </update>

    <update id="cleanCaptureTitleFlag">
        UPDATE t_customer_keyword SET fTitle = NULL, fCaptureTitleQueryTime = NULL, fCapturedTitle = 0
        where fTerminalType = #{terminalType} and fCustomerUuid = #{customerUuid}  and fType = #{entryType} and  fManualCleanTitle = 0
    </update>

    <update id="updateCustomerKeywordFromUI" parameterType="com.keymanager.monitoring.entity.CustomerKeyword">
        UPDATE t_customer_keyword
        SET fKeyword = #{customerKeyword.keyword},
          fUrl = #{customerKeyword.url},
          fOriginalUrl = #{customerKeyword.originalUrl},
          fTitle = #{customerKeyword.url},
          fSequence = #{customerKeyword.sequence
          fSearchEngine = #{customerKeyword.searchEngine},
          fInitialIndexCount = #{customerKeyword.initialIndexCount},
          fInitialPosition = #{customerKeyword.initialPosition},
          fCurrentIndexCount = #{customerKeyword.currentIndexCount},
          fCurrentPosition = #{customerKeyword.currentPosition},
          fServiceProvider = #{customerKeyword.serviceProvider},
          fOptimizeGroupName = #{customerKeyword.optimizeGroupName},
          fOptimizePlanCount = #{customerKeyword.optimizePlanCount},
          fPositionFirstCost = #{customerKeyword.positionFirstCost},
          fPositionSecondCost = #{customerKeyword.positionSecondCost},
          fPositionThirdCost = #{customerKeyword.positionThirdCost},
          fPositionForthCost = #{customerKeyword.positionForthCost},
          fPositionFifthCost = #{customerKeyword.positionFifthCost},
          fPositionFirstFee = #{customerKeyword.positionFirstFee},
          fPositionSecondFee = #{customerKeyword.positionSecondFee},
          fPositionThirdFee = #{customerKeyword.positionThirdFee},
          fPositionForthFee = #{customerKeyword.positionForthFee},
          fPositionFifthFee = #{customerKeyword.positionFifthFee},
          fPositionFirstPageFee = #{customerKeyword.positionFirstPageFee},
          fCollectMethod = #{customerKeyword.collectMethod},
          fPaymentStatus = #{customerKeyword.paymentStatus},
          fOrderNumber = #{customerKeyword.orderNumber},
          fRemarks = #{customerKeyword.remarks},
          fStatus = #{customerKeyword.status},
          fUpdateTime = #{customerKeyword.updateTime}
        WHERE fUuid = #{customerKeyword.uuid}
    </update>

    <select id="getCustomerKeywordCount" resultType="int">
        SELECT COUNT(1) FROM t_customer_keyword ck WHERE ck.fType = #{entryType} and ck.fTerminalType = #{terminalType} and ck.fCustomerUuid = #{customerUuid}
    </select>

    <select id="getCustomerKeywordsCount" resultType="java.util.Map">
        SELECT ck.fCustomerUuid, COUNT(1) as subCount FROM t_customer_keyword ck WHERE ck.fTerminalType = #{terminalType}
        and ck.fType = #{entryType} and ck.fTerminalType = #{terminalType} and ck.fCustomerUuid IN
        <foreach item="item" index="index" collection="customerUuids" open="(" separator="," close=")">
            #{item}
        </foreach>
         GROUP BY ck.fCustomerUuid
    </select>

    <select id="getSimilarCustomerKeywordCount" resultType="int">
        select Count(1) from t_customer_keyword where fKeyword = #{keyword} and fTerminalType = #{terminalType} and fCustomerUuid = #{customerUuid}
        and fOriginalUrl <![CDATA[ <> ]]> '' and fOriginalUrl like concat('%', #{originalUrl});
    </select>

    <select id="getMaxSequence" resultType="int">
        select max(fSequence) from t_customer_keyword where fTerminalType = #{terminalType} and fType = #{entryType} and fCustomerUuid =
        #{customerUuid};
    </select>

    <select id="searchSameCustomerKeywords" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="fullColID"/>
        FROM t_customer_keyword ck
        WHERE ck.fKeyword = #{keyword} and ck.fTerminalType = #{terminalType} and ck.fCustomerUuid = #{customerUuid}
        order by ck.fCreateTime ASC
    </select>

    <select id="getCustomerKeywordsForCaptureIndex" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="fullColID"/>
        FROM t_customer_keyword ck
        WHERE ck.fOptimizeGroupName IN ('pc_pm_xiaowu', 'm_pm_tiantian') AND ck.fCurrentIndexCount IS NULL AND ck.fPositionFirstFee IS NULL
        ORDER BY ck.fCaptureIndexQueryTime, ck.fCreateTime LIMIT 1
    </select>

    <select id="searchCustomerKeywordsForUpdateIndex" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="fullColID"/>
        FROM t_customer_keyword ck
        WHERE ck.fOptimizeGroupName IN ('pc_pm_xiaowu', 'm_pm_tiantian') AND ck.fCurrentIndexCount IS NULL AND ck.fPositionFirstFee IS NULL
        AND ck.fKeyword = #{keyword}
        ORDER BY ck.fCaptureIndexQueryTime, ck.fCreateTime
    </select>

    <select id="updateCaptureIndexQueryTime">
        UPDATE t_customer_keyword SET fCaptureIndexQueryTime = NOW() WHERE fKeyword = #{keyword} and fCurrentIndexCount IS NULL and fOptimizeGroupName IN ('pc_pm_xiaowu', 'm_pm_xiaowu')
    </select>

    <!--重构部分-->
    <select id="searchCustomerKeywordsPage" parameterType="com.keymanager.monitoring.criteria.CustomerKeywordCriteria" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
          <include refid="fullColID"/>
        FROM
        t_customer_keyword ck,
        t_customer c
        WHERE c.fUuid = ck.fCustomerUuid
          <include refid="searchCustomerKeywordsCriteria"/>
    </select>


    <select id="searchCustomerKeywordsCount"  resultType="int">
        SELECT
            Count(1)
        FROM
        t_customer_keyword ck,
        t_customer c
        WHERE c.fUuid = ck.fCustomerUuid
          <include refid="searchCustomerKeywordsCriteria"/>
    </select>

    <select id="searchCustomerKeywordsForDailyReport" parameterType="com.keymanager.monitoring.criteria.CustomerKeywordCriteria" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="dailyReportColID"/>
        FROM
        t_customer_keyword ck
        WHERE ck.fCustomerUuid = #{customerKeywordCriteria.customerUuid}
        AND ck.fStatus = 1
        AND fTerminalType =  #{customerKeywordCriteria.terminalType}
        AND (ck.fOptimizeGroupName != 'stop')
        ORDER BY ck.fSequence
    </select>

    <select id="searchCustomerKeywords" parameterType="com.keymanager.monitoring.criteria.CustomerKeywordCriteria" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="fullColID"/>
        FROM
        t_customer_keyword ck,
        t_customer c
        WHERE c.fUuid = ck.fCustomerUuid
          <include refid="searchCustomerKeywordsCriteria"/>
    </select>

    <update id="updateCustomerKeywordGroupName">
        UPDATE t_customer_keyword SET fOptimizeGroupName = #{customerKeywordUpdateGroupCriteria.targetGroupName},fUpdateTime = CURRENT_TIMESTAMP WHERE
        fTerminalType = #{customerKeywordUpdateGroupCriteria.terminalType}  AND fType = #{customerKeywordUpdateGroupCriteria.entryType}
        <if test="customerKeywordUpdateGroupCriteria.customerUuid !=null and customerKeywordUpdateGroupCriteria.customerUuid != ''">
            AND fCustomerUuid = #{customerKeywordUpdateGroupCriteria.customerUuid}
        </if>
         <if test="customerKeywordUpdateGroupCriteria.customerKeywordUuids != null"> AND fUuid IN
             <foreach item="item" index="index" collection="customerKeywordUpdateGroupCriteria.customerKeywordUuids" open="(" separator="," close=")">
                 #{item}
             </foreach>
         </if>
    </update>

    <select id="searchCustomerKeywordUuidByRank" resultType="java.lang.Long">
       select
          ps.fCustomerKeywordUuid
        from t_ck_position_summary ps,
          t_customer_keyword ck
        where ck.fUuid = ps.fCustomerKeywordUuid
            AND ck.fCustomerUuid = #{resultMap.customerUuid}
            and ck.fTerminalType = #{resultMap.terminalType}
            and ck.fType = #{resultMap.entryType}
            and (ps.fPosition = 0 or ps.fPosition > #{resultMap.position})
            and ps.fCreateDate >= DATE_SUB(CURRENT_DATE(), INTERVAL #{resultMap.day} DAY)
        GROUP BY ps.fCustomerKeywordUuid
        HAVING count(1) >=#{resultMap.day}
    </select>

    <update id="updateCustomerKeywordGroupNameByRank">
        UPDATE t_customer_keyword SET fOptimizeGroupName = #{targetGroupName} WHERE fUuid IN
        <foreach item="item" index="index" collection="customerKeywordUuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <delete id="deleteCustomerKeywordsByUuid">
        delete from t_customer_keyword where fUuid IN
        <foreach item="item" index="index" collection="customerKeywordUuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteCustomerKeywordsByCustomerUuid">
        delete from t_customer_keyword where fCustomerUuid = #{customerUuid}
    </delete>

    <delete id="deleteCustomerKeywordsWhenEmptyTitleAndUrl">
        delete from t_customer_keyword where fTerminalType = #{terminalType} AND fType = #{entryType} AND fCustomerUuid = #{customerUuid} AND (fTitle = '' or fTitle IS null) AND (fUrl = '' or fUrl IS NULL)
    </delete>

    <delete id="deleteCustomerKeywordsWhenEmptyTitle">
        delete from t_customer_keyword where fTerminalType = #{terminalType} AND fType = #{entryType} AND fCustomerUuid = #{customerUuid} AND (fTitle = '' or fTitle IS null)
    </delete>

    <delete id="deleteCustomerKeywords">
        delete from t_customer_keyword where fTerminalType = #{terminalType} AND fOptimizeGroupName = #{groupName} AND fKeyword = #{keyword}
    </delete>

    <select id="getGroups" resultType="String">
        SELECT DISTINCT ck.fOptimizeGroupName as 'group' FROM t_customer_keyword ck WHERE ck.fStatus = 1 AND ck.fOptimizeGroupName IS NOT NULL
        AND ck.fOptimizeGroupName <![CDATA[<>]]>'' ORDER BY ck.fOptimizeGroupName
    </select>

    <update id="cleanBigKeywordIndicator">
        UPDATE t_customer_keyword SET fBigKeyword = 0 WHERE fOptimizeGroupName = #{groupName}
    </update>

    <update id="setBigKeywordIndicator">
        UPDATE t_customer_keyword SET fBigKeyword = 1 WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="getEntryTypes" resultType="String">
        SELECT ck.fType as typeName FROM t_customer_keyword ck WHERE ck.fOptimizeGroupName = #{groupName} AND ck.fStatus = 1 limit 1
    </select>

    <update id="resetOptimizationInfo">
        UPDATE t_customer_keyword SET fOptimizedCount = 0, fInvalidRefreshCount = 0, fOptimizeDate = CURRENT_DATE(), fQueryCount = 0, fQueryDate = CURRENT_DATE()  WHERE fOptimizeDate != CURRENT_DATE()
    </update>

    <select id="searchRemainingOptimizationCount" resultType="java.util.Map">
        SELECT ck.fUuid as 'uuid', (ck.fOptimizePlanCount - ck.fOptimizedCount) AS 'remainingCount' FROM t_customer_keyword ck
        WHERE ck.fOptimizeGroupName = #{groupName} AND ck.fOptimizePlanCount > ck.fOptimizedCount
        and ((ck.fCurrentPosition = 0 and ck.fInvalidRefreshCount <![CDATA[<]]> 2) or (ck.fCurrentPosition > 0 and ck.fInvalidRefreshCount <![CDATA[<]]> #{maxInvalidCount}))
        ORDER BY (ck.fOptimizePlanCount - ck.fOptimizedCount) DESC
    </select>

    <select id="getCustomerKeywordForOptimization" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="fullColID"/>
        FROM t_customer_keyword ck
        WHERE ck.fOptimizeGroupName = #{groupName} and ck.fStatus = 1 and ck.fTerminalType = #{terminalType}
        and (DATE_SUB(NOW(), INTERVAL ck.fQueryInterval MINUTE) > ck.fQueryTime) and ck.fUrl <![CDATA[>]]> ''
        and ((ck.fCurrentPosition = 0 and ck.fInvalidRefreshCount <![CDATA[<]]> 2) or (ck.fCurrentPosition > 0 and ck.fInvalidRefreshCount <![CDATA[<]]> #{maxInvalidCount}))
        and (ck.fOptimizedCount <![CDATA[<]]> ck.fOptimizePlanCount)
        <if test="bigKeyword == true">
            and ck.fBigKeyword = 1
        </if>
        order by ck.fQueryTime limit 1
    </select>

    <update id="updateOptimizationQueryTime">
        UPDATE t_customer_keyword set fQueryDate = CURRENT_DATE(), fQueryCount = fQueryCount + 1, fInvalidRefreshCount = fInvalidRefreshCount + 1, fQueryTime = now()
        WHERE fUuid = #{customerKeywordUuid}
    </update>

    <update id="updateOptimizationResult">
        UPDATE t_customer_keyword
        SET fLastOptimizeDateTime = now(), fOptimizedCount = fOptimizedCount + #{count},
        <if test="count > 0">fInvalidRefreshCount = 0, </if>
        fOptimizedPercentage = fOptimizedCount/fOptimizePlanCount, fOptimizeDate = CURRENT_DATE(),fUpdateTime = NOW()
		WHERE fUuid = #{customerKeywordUuid}
    </update>

    <select id="searchCustomerKeywordsForAdjustingOptimizationCount" resultType="java.util.Map">
        SELECT ck.fUuid AS 'uuid', ck.fKeyword as 'keyword', ck.fUrl as 'url', ck.fCurrentIndexCount as 'currentIndexCount',
        GROUP_CONCAT(CAST(ps.fPosition AS CHAR) ORDER BY ps.fCreateDate) AS 'positions'
        FROM t_customer_keyword ck JOIN t_ck_position_summary ps ON ck.fUuid = ps.fCustomerKeywordUuid
		WHERE ps.fCreateDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) and ck.fCurrentIndexCount is not NULL
		AND ck.fStatus = 1 AND ck.fOptimizeGroupName
        IN
        <foreach item="item" index="index" collection="groupNames" open="(" separator="," close=")">
            #{item}
        </foreach>
		GROUP BY ck.fUuid, ck.fKeyword
    </select>

    <update id="adjustOptimizePlanCount">
        UPDATE t_customer_keyword
        SET fOptimizePlanCount = #{optimizationPlanCount}, fQueryInterval = #{queryInterval}
        WHERE fUuid = #{customerKeywordUuid}
    </update>

    <select id="getCustomerKeywordForCapturePosition" resultType="com.keymanager.monitoring.entity.CustomerKeyword">
        SELECT
        <include refid="fullColID"/>
        FROM t_customer_keyword ck
        WHERE ck.fTerminalType = #{terminalType} and ck.fUrl is not null and ck.fStatus = 1
        AND (ck.fCapturePositionQueryTime is null
        <if test="startTime != null">
          or  ck.fCapturePositionQueryTime <![CDATA[<]]> #{startTime}
        </if>
        <if test="minutes != null">
          or  ck.fCapturePositionQueryTime <![CDATA[<]]> DATE_SUB(NOW(), INTERVAL #{minutes} MINUTE )
        </if>
        )
        <if test="customerUuid != null">
            AND ck.fCustomerUuid = #{customerUuid}
        </if>

        <choose>
            <when test="groupNames != null">
                AND ck.fOptimizeGroupName IN
                <foreach item="item" index="index" collection="groupNames" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                AND (ck.fOptimizeGroupName IS NULL OR ck.fOptimizeGroupName <![CDATA[<>]]> 'stop')
            </otherwise>
        </choose>
        ORDER BY ck.fCapturePositionQueryTime, fUpdateTime DESC
        LIMIT 1
    </select>

    <update id="resetInvalidRefreshCount" parameterType="com.keymanager.monitoring.criteria.CustomerKeywordRefreshStatInfoCriteria">
        UPDATE t_customer_keyword SET fInvalidRefreshCount = 0 WHERE fType = #{customerKeywordRefreshStatInfoCriteria.entryType} and fTerminalType = #{customerKeywordRefreshStatInfoCriteria.terminalType}
        <if test="customerKeywordRefreshStatInfoCriteria.customerName!=null and customerKeywordRefreshStatInfoCriteria.customerName!=''">AND EXISTS (SELECT 1 FROM t_customer c WHERE c.fUuid = fCustomerUuid AND c.fContactPerson LIKE concat('%', #{customerKeywordRefreshStatInfoCriteria.customerName}, '%'))</if>
        <if test="customerKeywordRefreshStatInfoCriteria.groupName!=null and customerKeywordRefreshStatInfoCriteria.groupName!=''">
            <choose>
                <when test="customerKeywordRefreshStatInfoCriteria.fullMatchGroup == true">
                    AND fOptimizeGroupName = #{customerKeywordRefreshStatInfoCriteria.groupName}
                </when>
                <otherwise>
                    AND fOptimizeGroupName LIKE concat('%', #{customerKeywordRefreshStatInfoCriteria.groupName}, '%')
                </otherwise>
            </choose>
        </if>
    </update>

    <update id="updateCustomerKeywordStatus">
        UPDATE t_customer_keyword SET fStatus = #{status}
        WHERE fUuid IN
        <foreach item="uuid"  collection="uuids" open="(" separator="," close=")">
            #{uuid}
        </foreach>
    </update>

    <select id="getCustomerKeywordForAutoUpdateNegative" resultType="com.keymanager.monitoring.vo.SearchEngineResultVO">
        SELECT DISTINCT
          ck.fKeyword as 'keyword',
          ck.fCustomerUuid as 'customerUuid',
          ck.fOptimizeGroupName as 'group'
        FROM t_customer_keyword ck
        WHERE ck.fType = 'fm'
            <if test="groupName != null and groupName != ''">AND ck.fOptimizeGroupName = #{groupName}</if>
            AND ck.fTerminalType = #{terminalType}
            AND ck.fStatus = 1
            AND (ck.fAutoUpdateNegativeDateTime is null or DATE_ADD(ck.fAutoUpdateNegativeDateTime, INTERVAL 3 MINUTE) &lt; NOW())
        ORDER BY ck.fAutoUpdateNegativeDateTime LIMIT 1
    </select>

    <update id="updateAutoUpdateNegativeTimeAs4MinutesAgo">
        UPDATE t_customer_keyword
        SET fAutoUpdateNegativeDateTime = DATE_ADD(now(), INTERVAL -4 MINUTE)
        WHERE fType = 'fm'
            AND fStatus = 1
            AND fTerminalType = #{terminalType}
            AND fOptimizeGroupName = #{groupName}
    </update>

    <update id="updateAutoUpdateNegativeTime">
        UPDATE t_customer_keyword
        SET fAutoUpdateNegativeDateTime = NOW()
        WHERE fType = 'fm'
        AND fStatus = 1
        AND fKeyword = #{keyword}
        AND fTerminalType = #{terminalType}
        AND fOptimizeGroupName = #{groupName}
    </update>

    <select id="searchGroups" resultType="com.keymanager.monitoring.vo.CodeNameVo">
        select
        fOptimizeGroupName	as 'name'
        from t_customer_keyword
        where
            fOptimizeGroupName is not null
            and fOptimizeGroupName != ''
            GROUP BY fOptimizeGroupName
    </select>

    <select id="searchCustomerKeywordForCaptureTitle" resultType="com.keymanager.value.CustomerKeywordForCaptureTitle">
            SELECT
                ck.fKeyword  AS `keyword`,
                ck.fUrl  AS `url`,
                ck.fUuid  AS `uuid`,
                ck.fOriginalUrl  AS `wholeUrl`
            FROM
                t_customer_keyword ck
            WHERE 1 = 1
            <if test="qzCaptureTitleLog.terminalType != null and qzCaptureTitleLog.terminalType != ''">
                AND ck.fTerminalType = #{qzCaptureTitleLog.terminalType}
            </if>
            <if test="qzCaptureTitleLog.group != null and qzCaptureTitleLog.group != ''">
                AND ck.fOptimizeGroupName = #{qzCaptureTitleLog.group}
            </if>
            <if test="qzCaptureTitleLog.customerUuid != null and qzCaptureTitleLog.customerUuid != ''">
                AND ck.fCustomerUuid = #{qzCaptureTitleLog.customerUuid}
            </if>
            AND ck.fCapturedTitle = 0
            AND ck.fSearchEngine = #{searchEngine}
            AND ck.fCaptureTitleQueryTime IS NULL
            AND (ck.fTitle IS NULL OR ck.fTitle = '')
            LIMIT 1
    </select>

    <delete id="deleteEmptyTitleCustomerKeyword">
        DELETE
        FROM
            t_customer_keyword
        WHERE
            fCustomerUuid = #{qzCaptureTitleLog.customerUuid}
        AND fTerminalType = #{qzCaptureTitleLog.terminalType}
        AND fType =  #{qzCaptureTitleLog.type}
        AND fSearchEngine =  #{searchEngine}
        AND fOptimizeGroupName =  #{qzCaptureTitleLog.group}
        AND ( fTitle = '' OR  fTitle IS NULL )
        AND fManualCleanTitle  = 0
    </delete>

    <select id="searchCustomerKeywordSummaryInfo" resultType="java.lang.String">
        SELECT CONCAT(fKeyword, '__', fTerminalType) AS keyword_terminal
        FROM t_customer_keyword
        WHERE fCustomerUuid = #{customerUuid}
        and fType = #{entryType}
        GROUP BY fKeyword,fTerminalType
    </select>

    <select id="searchCustomerNegativeKeywords" resultType="java.lang.String">
        SELECT DISTINCT ck.fKeyword
        FROM t_customer_keyword ck
        WHERE fCustomerUuid = #{customerUuid}
        AND fType = 'fm'
        AND fStatus = 1
    </select>
</mapper>