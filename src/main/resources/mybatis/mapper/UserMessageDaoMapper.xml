<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keymanager.monitoring.dao.UserMessageDao">

    <select id="getUserMessages" resultType="com.keymanager.monitoring.vo.UserMessageVO">
        SELECT
            um.fUuid AS 'uuid',
            um.fCustomerUuid AS 'customerUuid',
            um.fType AS 'type',
            c.fContactPerson AS 'conTactPerson',
            um.fSenderUserName AS 'senderUserName',
            um.fReceiverUserName AS 'receiverUserName',
            um.fStatus AS 'status'
        FROM
            t_user_message um
        LEFT JOIN t_customer c
        ON um.fCustomerUuid = c.fUuid
        WHERE 1 = 1
            <if test="userMessageCriteria.type != null">
                AND um.fType = #{userMessageCriteria.type}
            </if>
            <if test="userMessageCriteria.status != null">
                AND um.fStatus = #{userMessageCriteria.status}
            </if>
            <choose>
                <when test="userMessageCriteria.date != null">
                    AND um.fCreateTime BETWEEN #{userMessageCriteria.date} AND DATE_ADD(#{userMessageCriteria.date},INTERVAL 1 DAY)
                </when>
                <otherwise>

                </otherwise>
            </choose>
            <choose>
                <when test="userMessageCriteria.senderUserNames != null or userMessageCriteria.receiverUserNames != null">
                    <if test="userMessageCriteria.senderUserNames != null">
                        AND um.fSenderUserName IN
                        <foreach collection="userMessageCriteria.senderUserNames" item="senderUserName" separator="," open="(" close=")">
                            #{senderUserName}
                        </foreach>
                    </if>
                    <if test="userMessageCriteria.receiverUserNames != null">
                        AND um.fReceiverUserName IN
                        <foreach collection="userMessageCriteria.receiverUserNames" item="receiverUserName" separator="," open="(" close=")">
                            #{receiverUserName}
                        </foreach>
                    </if>
                </when>
                <otherwise>

                </otherwise>
            </choose>
            AND (um.fSenderUserName = #{userMessageCriteria.userName} OR um.fReceiverUserName = #{userMessageCriteria.userName})
            <if test="userMessageCriteria.contactPerson != null">
                AND c.fContactPerson LIKE '${userMessageCriteria.contactPerson}%'
            </if>
        ORDER BY um.fUpdateTime DESC
    </select>

    <select id="getUserMessage" resultType="com.keymanager.monitoring.entity.UserMessage">
        SELECT
            um.fUuid AS 'uuid',
            um.fSenderUserName AS 'senderUserName',
            um.fReceiverUserName AS 'receiverUserName',
            um.fStatus AS 'status',
            um.fContent AS 'content',
            um.fUpdateTime AS 'updateTime'
        FROM
            t_user_message um
        WHERE 1 = 1
            <choose>
                <when test="type == 1">
                    <if test="userMessageCriteria.userName != null">
                        AND (um.fSenderUserName = #{userMessageCriteria.userName} OR um.fReceiverUserName = #{userMessageCriteria.userName})
                    </if>
                </when>
                <otherwise>
                    <if test="userMessageCriteria.userName != null">AND um.fSenderUserName = #{userMessageCriteria.userName}</if>
                    <if test="userMessageCriteria.receiverUserNames != null">AND um.fReceiverUserName = #{userMessageCriteria.receiverUserNames[0]}</if>
                </otherwise>
            </choose>
            <if test="userMessageCriteria.type != null">AND um.fType = #{userMessageCriteria.type}</if>
            <if test="userMessageCriteria.customerUuid != null">AND um.fCustomerUuid = #{userMessageCriteria.customerUuid}</if>
            <choose>
                <when test="userMessageCriteria.content != null">
                    AND um.fContent = #{userMessageCriteria.content}
                </when>
                <otherwise>
                    AND um.fStatus = 0
                </otherwise>
            </choose>
        ORDER BY um.fUpdateTime DESC
        LIMIT 1
    </select>

    <insert id="saveUserMessages">
        INSERT INTO t_user_message (fSenderUserName, fReceiverUserName, fType, fCustomerUuid, fContent, fUpdateTime)
        VALUES
        <foreach collection="userMessageCriteria.receiverUserNames" item="receiverUserName" separator=",">
            (#{userMessageCriteria.userName}, #{receiverUserName}, #{userMessageCriteria.type}, #{userMessageCriteria.customerUuid}, #{userMessageCriteria.content}, #{now})
        </foreach>
    </insert>

    <update id="updateUserMessages">
        UPDATE
            t_user_message
        SET
            <if test="userMessageCriteria.status != null">
                fStatus = #{userMessageCriteria.status},
            </if>
            <if test="userMessageCriteria.content != null">
                fContent = #{userMessageCriteria.content},
            </if>
            fUpdateTime = #{now}
        WHERE
            fUuid = #{userMessageCriteria.uuid}
    </update>

    <select id="checkMessageInboxCount" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(*)
        FROM t_user_message
        WHERE fStatus = 0
        AND (fSenderUserName = #{userName} OR fReceiverUserName = #{userName})
    </select>

    <select id="getHistoryUserMessages" resultType="com.keymanager.monitoring.entity.UserMessage">
        SELECT
            u.fUserName AS 'receiverUserName',
            um.fContent AS 'content',
            um.fStatus AS 'status'
        FROM t_user_message um
        LEFT JOIN t_userinfo u
        ON u.fLoginName = um.fReceiverUserName
        WHERE 1 = 1
        AND (um.fSenderUserName = #{userName} OR um.fReceiverUserName = #{userName})
        AND um.fCustomerUuid = #{customerUuid}
        AND um.fType = #{type}
        ORDER BY um.fUpdateTime DESC
        LIMIT 5
    </select>
</mapper>