<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keymanager.monitoring.dao.ClientStatusDao">
    <select id="searchClientStatusForRefreshStat" parameterType="com.keymanager.monitoring.criteria.CustomerKeywordRefreshStatInfoCriteria" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        cs.fPageNo AS "pageNo",
        cs.fContinuousFailCount AS "continuousFailCount",
        cs.fGroup AS "group",
        cs.fLastVisitTime AS "lastVisitTime"
        FROM t_client_status cs
        WHERE cs.fTerminalType = #{customerKeywordRefreshStatInfoCriteria.terminalType}
        AND cs.fValid = 1
        <if test="customerKeywordRefreshStatInfoCriteria.groupName!=null and customerKeywordRefreshStatInfoCriteria.groupName!=''">
            AND cs.fGroup like '${customerKeywordRefreshStatInfoCriteria.groupName}%'
            AND EXISTS (SELECT 1 FROM t_customer_keyword ck WHERE ck.fType = #{customerKeywordRefreshStatInfoCriteria.entryType} AND ck.fOptimizeGroupName like '${customerKeywordRefreshStatInfoCriteria.groupName}%')
        </if>
        ORDER BY cs.fGroup
    </select>

    <sql id="selectCol">
        cs.fClientID AS "clientID",
        cs.fTerminalType AS "terminalType",
        cs.fClientIDPrefix AS "clientIDPrefix",
        cs.fVersion AS "version",
        cs.fTargetVersion AS "targetVersion",
        cs.fPageNo AS "pageNo",
        cs.fContinuousFailCount AS "continuousFailCount",
        cs.fCity AS "city",
        cs.fGroup AS "group",
        cs.fOperationType AS "operationType",
        cs.fPage AS "page",
        cs.fPageSize AS "pageSize",
        cs.fZhanneiPercent AS "zhanneiPercent",
        cs.fZhanwaiPercent AS "zhanwaiPercent",
        cs.fSpecialCharPercent AS "specialCharPercent",
        cs.fKuaizhaoPercent AS "kuaizhaoPercent",
        cs.fBaiduSemPercent AS "baiduSemPercent",
        cs.fDragPercent AS "dragPercent",
        cs.fMultiBrowser AS "multiBrowser",
        cs.fClearCookie AS "clearCookie",
        cs.fDisableStatistics AS "disableStatistics",
        cs.fDisableVisitWebsite AS "disableVisitWebsite",
        cs.fAllowSwitchGroup AS "allowSwitchGroup",
        cs.fEntryPageMinCount AS "entryPageMinCount",
        cs.fEntryPageMaxCount AS "entryPageMaxCount",
        cs.fSwitchGroupName AS "switchGroupName",
        cs.fPageRemainMinTime AS "pageRemainMinTime",
        cs.fPageRemainMaxTime AS "pageRemainMaxTime",
        cs.fInputDelayMinTime AS "inputDelayMinTime",
        cs.fInputDelayMaxTime AS "inputDelayMaxTime",
        cs.fSlideDelayMinTime AS "slideDelayMinTime",
        cs.fSlideDelayMaxTime AS "slideDelayMaxTime",
        cs.fTitleRemainMinTime AS "titleRemainMinTime",
        cs.fTitleRemainMaxTime AS "titleRemainMaxTime",
        cs.fOptimizeKeywordCountPerIP AS "optimizeKeywordCountPerIP",
        cs.fOneIPOneUser AS "oneIPOneUser",
        cs.fRandomlyClickNoResult AS "randomlyClickNoResult",
        cs.fJustVisitSelfPage AS "justVisitSelfPage",
        cs.fSleepPer2Words AS "sleepPer2Words",
        cs.fSupportPaste AS "supportPaste",
        cs.fMoveRandomly AS "moveRandomly",
        cs.fParentSearchEntry AS "parentSearchEntry",
        cs.fClearLocalStorage AS "clearLocalStorage",
        cs.fLessClickAtNight AS "lessClickAtNight",
        cs.fSameCityUser AS "sameCityUser",
        cs.fLocateTitlePosition AS "locateTitlePosition",
        cs.fBaiduAllianceEntry AS "baiduAllianceEntry",
        cs.fJustClickSpecifiedTitle AS "justClickSpecifiedTitle",
        cs.fRandomlyClickMoreLink AS "randomlyClickMoreLink",
        cs.fMoveUp20 AS "moveUp20",
        cs.fWaitTimeAfterOpenBaidu AS "waitTimeAfterOpenBaidu",
        cs.fWaitTimeBeforeClick AS "waitTimeBeforeClick",
        cs.fWaitTimeAfterClick AS "waitTimeAfterClick",
        cs.fMaxUserCount AS "maxUserCount",
        cs.fOptimizeRelatedKeyword AS "optimizeRelatedKeyword",
        cs.fHost AS "host",
        cs.fPort AS "port",
        cs.fUserName AS "userName",
        cs.fPassword AS "password",
        cs.fBroadbandAccount AS "broadbandAccount",
        cs.fBroadbandPassword AS "broadbandPassword",
        cs.fFreeSpace AS "freeSpace",
        cs.fVPSBackendSystemComputerID AS "vPSBackendSystemComputerID",
        cs.fVPSBackendSystemPassword AS "vPSBackendSystemPassword",
        cs.fLastVisitTime AS "lastVisitTime",
        cs.fLastSendNotificationTime AS "lastSendNotificationTime",
        cs.fRestartCount AS "restartCount",
        cs.fRestartStatus AS "restartStatus",
        cs.fRestartTime AS "restartTime",
        cs.fValid AS "valid",
        cs.fRestartOrderingTime AS "restartOrderingTime",
        cs.fOptimizationStartDate AS "optimizationStartDate",
        cs.fOptimizationTotalCount AS "optimizationTotalCount",
        cs.fOptimizationSucceedCount AS "optimizationSucceedCount",
        cs.fRenewalDate AS "renewalDate",
        cs.fDownloadProgramType AS "downloadProgramType",
        cs.fStartUpStatus AS "startUpStatus",
        cs.fStartUpTime AS "startUpTime",
        cs.fStatus AS "status",
        cs.fRunningProgramType AS "runningProgramType",
        cs.fUpgradeFailedReason AS "upgradeFailedReason",
        cs.fCreateTime AS "createTime"
    </sql>

    <update id="updateClientStatusTargetVersion">
        UPDATE t_client_status SET fTargetVersion = #{targetVersion}
        WHERE fClientID IN
        <foreach item="item" collection="clientIDs" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    
    <update id="updateClientStatusTargetVPSPassword">
        UPDATE t_client_status SET fTargetVPSPassword = #{targetVPSPassword}
        WHERE fClientID IN
        <foreach item="item" collection="clientIDs" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    

    <delete id="deleteClientStatus">
        DELETE FROM t_client_status WHERE fClientID IN
        <foreach item="item" collection="clientIDs" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="searchClientStatuses" parameterType="com.keymanager.monitoring.criteria.ClientStatusCriteria" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        <include refid="selectCol" />
        FROM
        t_client_status cs
        WHERE cs.fTerminalType = #{clientStatusCriteria.terminalType}
        <if test="clientStatusCriteria.clientID != null and clientStatusCriteria.clientID != ''"> AND cs.fClientID like '%${clientStatusCriteria.clientID}%'</if>
        <if test="clientStatusCriteria.groupName != null and clientStatusCriteria.groupName != ''"> AND cs.fGroup like '%${clientStatusCriteria.groupName}%'</if>
        <if test="clientStatusCriteria.upgradeFailedReason != null and clientStatusCriteria.upgradeFailedReason != ''"> AND cs.fUpgradeFailedReason like '%${clientStatusCriteria.upgradeFailedReason}%'</if>
        <if test="clientStatusCriteria.version != null and clientStatusCriteria.version != ''"> AND cs.fVersion like concat(#{clientStatusCriteria.version},'%')</if>
        <if test="clientStatusCriteria.noOperationType != null and clientStatusCriteria.noOperationType != ''"> AND (cs.fOperationType is null or cs.fOperationType = '')</if>
        <if test="clientStatusCriteria.noOperationType == null and clientStatusCriteria.operationType != null and clientStatusCriteria.operationType != ''">
            AND cs.fOperationType = #{clientStatusCriteria.operationType}
        </if>
        <if test="clientStatusCriteria.city != null and clientStatusCriteria.city != ''"> AND cs.fCity like concat(#{clientStatusCriteria.city},'%')</if>
        <if test="clientStatusCriteria.valid != null and clientStatusCriteria.valid != ''"> AND cs.fValid = #{clientStatusCriteria.valid}</if>
        <if test="clientStatusCriteria.hasProblem != null"> AND (cs.fContinuousFailCount &gt; 5 OR cs.fTenMinsLastVisitTime &lt; NOW()) and cs.fValid = 1</if>
        <if test="clientStatusCriteria.renewal != null"> AND DATE_ADD(cs.fRenewalDate, INTERVAL -3 DAY) &lt; CURRENT_DATE() and cs.fValid = 1</if>
        <if test="clientStatusCriteria.noGroup != null"> AND (cs.fGroup is null or cs.fGroup = '')</if>
        <if test="clientStatusCriteria.hasGroup != null"> AND cs.fGroup > ''</if>
        <if test="clientStatusCriteria.startUpStatus != null and clientStatusCriteria.startUpStatus != ''"> AND cs.fStartUpStatus = #{clientStatusCriteria.startUpStatus}</if>
        <if test="clientStatusCriteria.runningProgramType != null and clientStatusCriteria.runningProgramType != ''"> AND cs.fRunningProgramType = #{clientStatusCriteria.runningProgramType}</if>
        <if test="clientStatusCriteria.noVNC != null"> AND (cs.fHost is null or cs.fHost = '')</if>
        <if test="clientStatusCriteria.noUpgrade != null"> AND (cs.fVersion &lt;&gt; cs.fTargetVersion)</if>
        <if test="clientStatusCriteria.startUpClient != null"> AND cs.fDownloadProgramType > ''</if>
        <if test="clientStatusCriteria.vpsBackendSystemComputerID != null and clientStatusCriteria.vpsBackendSystemComputerID != ''"> AND (cs.fVPSBackendSystemComputerID = #{clientStatusCriteria.vpsBackendSystemComputerID})</if>
        <if test="clientStatusCriteria.switchGroupName != null and clientStatusCriteria.switchGroupName != ''"> AND cs.fSwitchGroupName = #{clientStatusCriteria.switchGroupName}</if>
        <if test="clientStatusCriteria.switchGroups != null"> AND cs.fSwitchGroupName IN
            <foreach collection="clientStatusCriteria.switchGroups" item="switchGroup" open="(" close=")" separator=",">
                #{switchGroup}
            </foreach>
        </if>
        <if test="clientStatusCriteria.orderBy != null and clientStatusCriteria.orderBy != ''"> ORDER BY ${clientStatusCriteria.orderBy}</if>

    </select>

    <select id="getClientStatusesForSwitchGroup" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        <include refid="selectCol" />
        FROM
        t_client_status cs
        WHERE cs.fTerminalType = #{terminalType}
        AND cs.fValid = 1
        AND  cs.fAllowSwitchGroup = 1
    </select>

    <select id="getClientStatusesForRenewal" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
            cs.fClientID as 'clientID',
            cs.fRenewalDate AS "renewalDate"
        FROM
        t_client_status cs
        WHERE DATE_ADD(fRenewalDate, INTERVAL -3 DAY ) &lt; NOW()
        AND fValid = 1
        ORDER BY fRenewalDate
    </select>

    <select id="searchBadClientStatus" parameterType="com.keymanager.monitoring.criteria.ClientStatusCriteria" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        <include refid="selectCol" />
        FROM
        t_client_status cs
        WHERE cs.fTerminalType = #{clientStatusCriteria.terminalType}
        AND (cs.fContinuousFailCount &gt; 5 OR cs.fTenMinsLastVisitTime &lt; NOW()) and cs.fValid = 1
        <if test="clientStatusCriteria.groupName != null and clientStatusCriteria.groupName != ''">AND cs.fGroup = #{clientStatusCriteria.groupName}</if>
        <if test="clientStatusCriteria.switchGroups != null"> AND cs.fSwitchGroupName IN
            <foreach collection="clientStatusCriteria.switchGroups" item="switchGroup" open="(" close=")" separator=",">
                #{switchGroup}
            </foreach>
        </if>
    </select>

    <select id="getClientStatusByClientID" parameterType="java.lang.String" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        <include refid="selectCol" />
        FROM
        t_client_status cs
        WHERE cs.fTerminalType = #{terminalType}
        AND cs.fClientID = #{clientID}
    </select>

    <update id="resetRestartStatusForProcessing">
        UPDATE t_client_status SET fRestartStatus = NULL WHERE (fRestartStatus = 'Processing' or fRestartStatus = 'Logging')
    </update>

    <select id="searchClientStatusesOrByHost" parameterType="java.lang.String" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        <include refid="selectCol" />
        FROM
        t_client_status cs
        WHERE cs.fTerminalType = #{terminalType}
        <if test="comfirm != null"> and (cs.fHost is not null or cs.fHost &lt;&gt; '')</if>
    </select>

    <update id="updateClientVersion">
        UPDATE t_client_status
        SET fVersion = #{version}, fRestartCount = 0, fRestartStatus = null
        WHERE fClientID = #{clientID}
    </update>

    <insert id="addSummaryClientStatus" parameterType="com.keymanager.monitoring.entity.ClientStatus">
        INSERT INTO t_client_status
        (fTerminalType,
        fFreeSpace,
        fVersion,
        fCity,
        fClientID,
        fClientIDPrefix,
        fHost,
        fPort,
        fUserName,
        fPassword,
        fVPSBackendSystemComputerID,
        fLastVisitTime,
        fTenMinsLastVisitTime,
        fRestartTime,
        fThreeMinsRestartTime,
        fTenMinsRestartTime,
        fLastSendNotificationTime,
        fRenewalDate,
        fCreateTime)
        VALUES (#{clientStatus.terminalType},
        #{clientStatus.freeSpace},
        #{clientStatus.version},
        #{clientStatus.city},
        #{clientStatus.clientID},
        #{clientStatus.clientIDPrefix},
        #{clientStatus.host},
        #{clientStatus.port},
        #{clientStatus.userName},
        #{clientStatus.password},
        #{clientStatus.vpsBackendSystemComputerID},
        NOW(),
        DATE_ADD(NOW(), INTERVAL 10 MINUTE ),
        NOW(),
        DATE_ADD(NOW(), INTERVAL 3 MINUTE ),
        DATE_ADD(NOW(), INTERVAL 10 MINUTE ),
        NULL,
        DATE_ADD(CURRENT_DATE(), INTERVAL - 1 DAY),
        NOW())
    </insert>

    <insert id="addClientStatusByVPSFile" parameterType="com.keymanager.monitoring.entity.ClientStatus">
        INSERT INTO t_client_status
        (fTerminalType,
        fFreeSpace,
        fClientID,
        fClientIDPrefix,
        fHost,
        fPort,
        fUserName,
        fPassword,
        fVPSBackendSystemComputerID,
        fDisableStatistics,
        fValid,
        fBroadbandAccount,
        fBroadbandPassword,
        fLastVisitTime,
        fTenMinsLastVisitTime,
        fRestartTime,
        fThreeMinsRestartTime,
        fTenMinsRestartTime,
        fLastSendNotificationTime,
        fRenewalDate,
        fCreateTime)
        VALUES (#{clientStatus.terminalType},
        #{clientStatus.freeSpace},
        #{clientStatus.clientID},
        #{clientStatus.clientIDPrefix},
        #{clientStatus.host},
        #{clientStatus.port},
        #{clientStatus.userName},
        #{clientStatus.password},
        #{clientStatus.vpsBackendSystemComputerID},
        #{clientStatus.disableStatistics},
        #{clientStatus.valid},
        #{clientStatus.broadbandAccount},
        #{clientStatus.broadbandPassword},
        NOW(),
        DATE_ADD(NOW(), INTERVAL 10 MINUTE ),
        NOW(),
        DATE_ADD(NOW(), INTERVAL 3 MINUTE ),
        DATE_ADD(NOW(), INTERVAL 10 MINUTE ),
        NULL,
        DATE_ADD(CURRENT_DATE(), INTERVAL - 1 DAY),
        NOW())
    </insert>

    <update id="updateOptimizationResult">
        UPDATE t_client_status
        SET fRestartOrderingTime = NOW(),
        fOptimizationStartDate = IF(fOptimizationStartDate IS NULL, CURRENT_DATE(), fOptimizationStartDate),
        fOptimizationTotalCount = fOptimizationTotalCount + 1,
        fOptimizationSucceedCount = fOptimizationSucceedCount + #{count},
        fLastVisitTime = NOW(),
        fTenMinsLastVisitTime = DATE_ADD(NOW(), INTERVAL 10 MINUTE ),
        <choose>
            <when test="count == 0">
                fContinuousFailCount = fContinuousFailCount + 1,
            </when>
            <when test="count == 1">
                fContinuousFailCount = 0,
            </when>
        </choose>
        fLastSendNotificationTime = NULL,
        fStatus = #{status},
        fFreeSpace = #{freeSpace},
        fVersion = #{version},
        fCity = #{city},
        fRunningProgramType = #{runningProgramType}
        WHERE fClientID = #{clientID}
    </update>

    <update id="updatePageNo">
        UPDATE t_client_status
        SET
        fLastVisitTime = NOW(),
        fTenMinsLastVisitTime = DATE_ADD(NOW(), INTERVAL 10 MINUTE ),
        fPageNo = #{pageNo}
        WHERE fClientID = #{clientID}
    </update>

    <update id="updateRestartStatus">
        UPDATE t_client_status
        SET fRestartStatus = #{restartStatus}, fRestartTime = now(), fThreeMinsRestartTime = DATE_ADD(NOW(), INTERVAL 3 MINUTE ), fTenMinsRestartTime = DATE_ADD(NOW(), INTERVAL 10 MINUTE ), fRestartOrderingTime = now()
        WHERE fClientID = #{clientID}
    </update>

    <select id="searchClientStatusSummaryVO" resultType="com.keymanager.value.ClientStatusSummaryVO">
        SELECT cs.fClientIDPrefix as clientIDPrefix, cs.fTerminalType as type, cs.fCity as city, COUNT(1) as 'count', fSwitchGroupName as 'switchGroupName'
        FROM t_client_status cs
        <where> cs.fValid = 1
            <if test="clientIDPrefix!=null and clientIDPrefix!=''">and cs.fClientIDPrefix LIKE '%${clientIDPrefix}%'</if>
            <if test="city!=null and city!=''">and cs.fCity LIKE '%${city}%'</if>
            <if test="switchGroupName!=null and switchGroupName!=''">and cs.fSwitchGroupName LIKE '%${switchGroupName}%'</if>
        </where>
        GROUP BY cs.fClientIDPrefix, cs.fTerminalType, cs.fCity ORDER BY cs.fClientIDPrefix
    </select>

    <select id="searchClientStatusGroupSummaryVO" resultType="com.keymanager.value.ClientStatusGroupSummaryVO">
        SELECT cs.fGroup as 'group', cs.fTerminalType as terminalType, COUNT(1) AS 'count' FROM t_client_status cs
        <where>
            <if test="group!=null and group!=''">and cs.fGroup LIKE '%${group}%'</if>
            <if test="terminalType!=null and terminalType!=''">and cs.fTerminalType = #{terminalType}</if>
        </where>
        GROUP BY cs.fGroup, cs.fTerminalType ORDER BY cs.fGroup
    </select>

    <select id="searchRestartingClientStatuses" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        cs.fClientID AS "clientID",
        cs.fTerminalType AS "terminalType",
        cs.fVPSBackendSystemComputerID AS "vPSBackendSystemComputerID",
        cs.fContinuousFailCount AS "continuousFailCount",
        cs.fLastVisitTime AS "lastVisitTime",
        cs.fPageNo AS "pageNo",
        cs.fHost AS "host",
        cs.fPort AS "port",
        cs.fUserName AS "userName",
        cs.fPassword AS "password",
        cs.fRestartStatus AS "restartStatus"
        FROM t_client_status cs
        WHERE fTenMinsLastVisitTime &lt; NOW() and fValid = 1
        AND fRestartStatus = 'restarting' AND fThreeMinsRestartTime &lt; NOW()
        AND fStartUpStatus = 'Completed'
        AND fHost &gt; '' order by fRestartOrderingTime limit 1
    </select>


    <select id="searchWaitingRestartingClientStatuses" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        cs.fClientID AS "clientID",
        cs.fTerminalType AS "terminalType",
        cs.fVPSBackendSystemComputerID AS "vPSBackendSystemComputerID",
        cs.fContinuousFailCount AS "continuousFailCount",
        cs.fLastVisitTime AS "lastVisitTime",
        cs.fPageNo AS "pageNo",
        cs.fHost AS "host",
        cs.fPort AS "port",
        cs.fUserName AS "userName",
        cs.fPassword AS "password",
        cs.fRestartStatus AS "restartStatus"
        FROM t_client_status cs
        WHERE (fContinuousFailCount > 5 OR fTenMinsLastVisitTime &lt; NOW())
        AND fTenMinsRestartTime &lt; NOW() and fRemainingKeyword = 1
        AND fStartUpStatus = 'Completed'
        AND fValid = 1 AND fHost &gt; '' order by fRestartOrderingTime  limit 1
    </select>

    <update id="updateRemainingKeywordIndicator">
        UPDATE t_client_status SET fRemainingKeyword = #{indicator} WHERE fGroup in
        <foreach item="item" collection="groupNames" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateAllRemainingKeywordIndicator">
        UPDATE t_client_status SET fRemainingKeyword = #{indicator}
    </update>

    <select id="getClientStatusForStartUp" resultType="com.keymanager.monitoring.entity.ClientStatus">
        SELECT
        <include refid="selectCol" />
        FROM t_client_status cs
        WHERE (cs.fStartUpStatus = 'New' OR (cs.fStartUpStatus = 'Processing' AND DATE_ADD(cs.fStartUpTime, INTERVAL 30 MINUTE) &lt; NOW()))
        ORDER BY cs.fStartUpTime
        LIMIT 1
    </select>

    <select id="getDownloadingClientCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_client_status WHERE fStartUpStatus = "Downloading"
    </select>

    <update id="reopenClientStatus">
        UPDATE
            t_client_status
        SET
            fDownloadProgramType = #{downloadProgramType},
            fSwitchGroupName = #{switchGroupName},
            fStartUpStatus = 'New',
            fStartUpTime = NULL
        WHERE fClientID IN
        <foreach item="clientID" collection="clientIDs" open="(" separator="," close=")">
            #{clientID}
        </foreach>
    </update>

    <update id="updateStartUpStatusForCompleted">
        UPDATE t_client_status SET fStartUpStatus = 'Completed'
        WHERE fClientID IN
        <foreach item="clientID" collection="clientIDs" open="(" separator="," close=")">
            #{clientID}
        </foreach>
    </update>

    <select id="selectMaxIdByClientID" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT MAX(CAST(TRIM(LEADING #{clientID} FROM fClientID) AS DECIMAL)) AS clientID
        FROM t_client_status
        WHERE fClientID LIKE '${clientID}%'
    </select>

    <update id="batchUpdateClientStatus">
        UPDATE t_client_status
        SET fTerminalType = fTerminalType
        <if test="cs.group==1"> ,fGroup = #{clientStatus.group}</if>
        <if test="cs.allowSwitchGroup==1"> ,fAllowSwitchGroup = #{clientStatus.allowSwitchGroup}</if>
        <if test="cs.disableStatistics==1"> ,fDisableStatistics = #{clientStatus.disableStatistics}</if>
        <if test="cs.disableVisitWebsite==1"> ,fDisableVisitWebsite = #{clientStatus.disableVisitWebsite}</if>
        <if test="cs.operationType==1"> ,fOperationType = #{clientStatus.operationType}</if>
        <if test="cs.page==1"> ,fPage = #{clientStatus.page}</if>
        <if test="cs.pageSize==1"> ,fPageSize = #{clientStatus.pageSize}</if>
        <if test="cs.zhanneiPercent==1"> ,fZhanneiPercent = #{clientStatus.zhanneiPercent}</if>
        <if test="cs.zhanwaiPercent==1"> ,fZhanwaiPercent = #{clientStatus.zhanwaiPercent}</if>
        <if test="cs.kuaizhaoPercent==1"> ,fKuaizhaoPercent = #{clientStatus.kuaizhaoPercent}</if>
        <if test="cs.baiduSemPercent==1"> ,fBaiduSemPercent = #{clientStatus.baiduSemPercent}</if>
        <if test="cs.specialCharPercent==1"> ,fSpecialCharPercent = #{clientStatus.specialCharPercent}</if>
        <if test="cs.dragPercent==1"> ,fDragPercent = #{clientStatus.dragPercent}</if>
        <if test="cs.multiBrowser==1"> ,fMultiBrowser = #{clientStatus.multiBrowser}</if>
        <if test="cs.clearCookie==1"> ,fClearCookie = #{clientStatus.clearCookie}</if>
        <if test="cs.switchGroupName==1"> ,fSwitchGroupName = #{clientStatus.switchGroupName}</if>
        <if test="cs.host==1"> ,fHost = #{clientStatus.host}</if>
        <if test="cs.port==1"> ,fPort = #{clientStatus.port}</if>
        <if test="cs.userName==1"> ,fUserName = #{clientStatus.userName}</if>
        <if test="cs.vpsBackendSystemComputerID==1"> ,fVpsBackendSystemComputerID = #{clientStatus.vpsBackendSystemComputerID}</if>
        <if test="cs.vpsBackendSystemPassword==1"> ,fVpsBackendSystemPassword = #{clientStatus.vpsBackendSystemPassword}</if>
        <if test="cs.maxUserCount==1"> ,fMaxUserCount = #{clientStatus.maxUserCount}</if>
        <if test="cs.broadbandAccount==1"> ,fBroadbandAccount = #{clientStatus.broadbandAccount}</if>
        <if test="cs.broadbandPassword==1"> ,fBroadbandPassword = #{clientStatus.broadbandPassword}</if>
        <if test="cs.entryPageMinCount==1"> ,fEntryPageMinCount = #{clientStatus.entryPageMinCount}</if>
        <if test="cs.entryPageMaxCount==1"> ,fEntryPageMaxCount = #{clientStatus.entryPageMaxCount}</if>
        <if test="cs.pageRemainMinTime==1"> ,fPageRemainMinTime = #{clientStatus.pageRemainMinTime}</if>
        <if test="cs.pageRemainMaxTime==1"> ,fPageRemainMaxTime = #{clientStatus.pageRemainMaxTime}</if>
        <if test="cs.inputDelayMinTime==1"> ,fInputDelayMinTime = #{clientStatus.inputDelayMinTime}</if>
        <if test="cs.inputDelayMaxTime==1"> ,fInputDelayMaxTime = #{clientStatus.inputDelayMaxTime}</if>
        <if test="cs.slideDelayMinTime==1"> ,fSlideDelayMinTime = #{clientStatus.slideDelayMinTime}</if>
        <if test="cs.slideDelayMaxTime==1"> ,fSlideDelayMaxTime = #{clientStatus.slideDelayMaxTime}</if>
        <if test="cs.titleRemainMinTime==1"> ,fTitleRemainMinTime = #{clientStatus.titleRemainMinTime}</if>
        <if test="cs.titleRemainMaxTime==1"> ,fTitleRemainMaxTime = #{clientStatus.titleRemainMaxTime}</if>
        <if test="cs.optimizeKeywordCountPerIP==1"> ,fOptimizeKeywordCountPerIP = #{clientStatus.optimizeKeywordCountPerIP}</if>
        <if test="cs.waitTimeAfterOpenBaidu==1"> ,fWaitTimeAfterOpenBaidu = #{clientStatus.waitTimeAfterOpenBaidu}</if>
        <if test="cs.waitTimeBeforeClick==1"> ,fWaitTimeBeforeClick = #{clientStatus.waitTimeBeforeClick}</if>
        <if test="cs.waitTimeAfterClick==1"> ,fWaitTimeAfterClick = #{clientStatus.waitTimeAfterClick}</if>
        <if test="cs.oneIPOneUser==1"> ,fOneIPOneUser = #{clientStatus.oneIPOneUser}</if>
        <if test="cs.randomlyClickNoResult==1"> ,fRandomlyClickNoResult = #{clientStatus.randomlyClickNoResult}</if>
        <if test="cs.justVisitSelfPage==1"> ,fJustVisitSelfPage = #{clientStatus.justVisitSelfPage}</if>
        <if test="cs.sleepPer2Words==1"> ,fSleepPer2Words = #{clientStatus.sleepPer2Words}</if>
        <if test="cs.supportPaste==1"> ,fSupportPaste = #{clientStatus.supportPaste}</if>
        <if test="cs.moveRandomly==1"> ,fMoveRandomly = #{clientStatus.moveRandomly}</if>
        <if test="cs.parentSearchEntry==1"> ,fParentSearchEntry = #{clientStatus.parentSearchEntry}</if>
        <if test="cs.clearLocalStorage==1"> ,fClearLocalStorage = #{clientStatus.clearLocalStorage}</if>
        <if test="cs.lessClickAtNight==1"> ,fLessClickAtNight = #{clientStatus.lessClickAtNight}</if>
        <if test="cs.sameCityUser==1"> ,fSameCityUser = #{clientStatus.sameCityUser}</if>
        <if test="cs.locateTitlePosition==1"> ,fLocateTitlePosition = #{clientStatus.locateTitlePosition}</if>
        <if test="cs.baiduAllianceEntry==1"> ,fBaiduAllianceEntry = #{clientStatus.baiduAllianceEntry}</if>
        <if test="cs.justClickSpecifiedTitle==1"> ,fJustClickSpecifiedTitle = #{clientStatus.justClickSpecifiedTitle}</if>
        <if test="cs.randomlyClickMoreLink==1"> ,fRandomlyClickMoreLink = #{clientStatus.randomlyClickMoreLink}</if>
        <if test="cs.moveUp20==1"> ,fMoveUp20 = #{clientStatus.moveUp20}</if>
        <if test="cs.optimizeRelatedKeyword==1"> ,fOptimizeRelatedKeyword = #{clientStatus.optimizeRelatedKeyword}</if>
        WHERE fClientID IN
        <foreach item="clientID" collection="clientIDs" open="(" separator="," close=")">
            #{clientID}
        </foreach>
    </update>
</mapper>