<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keymanager.monitoring.dao.QZSettingDao">
    <select id="getAvailableQZSettings" resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
            qs.fUuid                           AS 'uuid',
            qs.fCustomerUuid                   AS 'customerUuid',
            qs.fDomain                         AS 'domain',
            qs.fBearPawNumber                  AS 'bearPawNumber',
            qs.fPcGroup                        AS 'pcGroup',
            qs.fPhoneGroup                     AS 'phoneGroup',
            qs.fType                           AS 'type',
            qs.fIgnoreNoIndex                  AS 'ignoreNoIndex',
            qs.fIgnoreNoOrder                  AS 'ignoreNoOrder',
            qs.fUpdateInterval                 AS 'updateInterval',
            qs.fUpdateStatus                   AS 'updateStatus',
            qs.fUpdateStartTime                AS 'updateStartTime',
            qs.fUpdateEndTime                  AS 'updateEndTime',
            qs.fUpdateTime                     AS 'updateTime',
            qs.fCreateTime                     AS 'createTime',
            qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
            qs.fCaptureCurrentKeywordStatus    AS 'captureCurrentKeywordStatus'
        FROM t_qz_setting qs
        WHERE (qs.fUpdateStatus IS NULL
               OR qs.fUpdateEndTime IS NULL
               OR (qs.fUpdateStatus = 'Completed'
                   AND qs.fUpdateEndTime &gt; DATE_SUB(CURRENT_DATE(), INTERVAL qs.fUpdateInterval DAY))
               OR (qs.fUpdateStatus = 'Processing'
                   AND DATE_SUB(NOW(), INTERVAL 10 MINUTE) > qs.fUpdateStartTime)
               OR (qs.fUpdateStatus = 'DownloadTimesUsed'
                   AND qs.fUpdateEndTime &lt; CURRENT_DATE())
              ) AND (qs.fRenewalStatus = 1 OR qs.fRenewalStatus = 2)
              AND ((qs.fPcGroup > '' AND qs.fPcKeywordExceedMaxCount = 0)
              OR  (qs.fPhoneGroup > '' AND qs.fPhoneKeywordExceedMaxCount = 0))
              AND qs.fAutoCrawlKeywordFlag IS TRUE
        ORDER BY qs.fUpdateEndTime
    </select>

    <select id="captureCurrentKeyword" resultType="com.keymanager.monitoring.entity.QZSetting">
       SELECT
            DISTINCT qs.fUuid AS 'uuid',
            qs.fCustomerUuid AS 'customerUuid',
            qs.fDomain AS 'domain',
            qs.fPcGroup AS 'pcGroup',
            qs.fPhoneGroup AS 'phoneGroup',
            qs.fType AS 'type',
            qs.fIgnoreNoIndex AS 'ignoreNoIndex',
            qs.fIgnoreNoOrder AS 'ignoreNoOrder',
            qs.fUpdateInterval AS 'updateInterval',
            qs.fUpdateStatus AS 'updateStatus',
            qs.fUpdateStartTime AS 'updateStartTime',
            qs.fUpdateEndTime AS 'updateEndTime',
            qs.fUpdateTime AS 'updateTime',
            qs.fCreateTime AS 'createTime',
            qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
            qs.fCaptureCurrentKeywordStatus AS 'captureCurrentKeywordStatus'
        FROM
            t_qz_setting qs
        JOIN t_qz_operation_type qt ON qs.fUuid = qt.fQZSettingUuid
        WHERE
            qt.fUuid IN(
                SELECT
                    qr.fQZOperationTypeUuid
                FROM
                    t_qz_charge_rule qr
            )
        AND qs.fCaptureCurrentKeywordStatus IS NULL
        OR (
            qs.fCaptureCurrentKeywordStatus = 'Completed'
            AND DATE_SUB(NOW(), INTERVAL 12 HOUR) > qs.fCaptureCurrentKeywordCountTime
        )
        OR (
            qs.fCaptureCurrentKeywordStatus = 'Processing'
            AND DATE_SUB(NOW(), INTERVAL 10 MINUTE) > qs.fCaptureCurrentKeywordCountTime
        )
        AND (qs.fRenewalStatus = 1 OR qs.fRenewalStatus = 2)
        ORDER BY qs.fCaptureCurrentKeywordCountTime
    </select>

    <select id="getChargeRemindData" resultType="com.keymanager.monitoring.vo.DateRangeTypeVO">
        SELECT DISTINCT
          qs.fUuid AS "uuid",
          ot.fNextChargeDate AS "nextChargeDate"
        FROM
        t_qz_setting qs,
        t_qz_operation_type ot
        WHERE
        qs.fUuid = ot.fQZSettingUuid
        AND ot.fNextChargeDate &lt;= date_add(CURDATE(), INTERVAL 7 DAY)
        AND ot.fIsDeleted = 0
        AND (qs.fRenewalStatus = 1 OR qs.fRenewalStatus = 2)
    </select>

    <select id="searchQZSettings" resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
            qs.fUuid AS 'uuid',
            c.fUserID AS 'userID',
            qs.fCustomerUuid AS 'customerUuid',
            c.fContactPerson AS 'contactPerson',
            o.fOrganizationName AS 'organizationName',
            qs.fDomain AS 'domain',
            qs.fSearchEngine  AS 'searchEngine',
            qs.fBearPawNumber AS 'bearPawNumber',
            <choose>
                <when test="qzSettingSearchCriteria.terminalType == 'PC'">
                    qs.fPcGroup AS 'pcGroup',
                </when>
                <when test="qzSettingSearchCriteria.terminalType == 'Phone'">
                    qs.fPhoneGroup AS 'phoneGroup',
                </when>
            </choose>
            qs.fType AS 'type',
            qs.fCreateTime AS 'createTime',
            qs.fStatus AS 'status',
            qs.fRenewalStatus AS 'renewalStatus',
            qs.fCrawlerStatus AS 'crawlerStatus',
            qs.fAutoCrawlKeywordFlag AS 'autoCrawlKeywordFlag'
        FROM t_qz_setting qs
        JOIN t_customer c
        ON qs.fCustomerUuid = c.fUuid
        LEFT JOIN t_userinfo u
        ON u.fLoginName = c.fUserID
        LEFT JOIN t_organization o
        ON o.fUuid = u.fOrganizationID
        WHERE 1 = 1
        <if test="qzSettingSearchCriteria.loginName != null and qzSettingSearchCriteria.loginName != ''">AND c.fUserID = #{qzSettingSearchCriteria.loginName}</if>
        <if test="qzSettingSearchCriteria.organizationID != null and qzSettingSearchCriteria.organizationID != ''">AND o.fUuid = #{qzSettingSearchCriteria.organizationID}</if>
        <if test="qzSettingSearchCriteria.customerUuid != null and qzSettingSearchCriteria.customerUuid != ''">AND qs.fCustomerUuid = #{qzSettingSearchCriteria.customerUuid}</if>
        <if test="qzSettingSearchCriteria.domain != null and qzSettingSearchCriteria.domain != ''">AND qs.fDomain = #{qzSettingSearchCriteria.domain}</if>
        <if test="qzSettingSearchCriteria.searchEngine != 'All'">AND qs.fSearchEngine = #{qzSettingSearchCriteria.searchEngine}</if>
        <choose>
            <when test="qzSettingSearchCriteria.terminalType == 'PC'">
                AND qs.fPcGroup &gt; ''
                <if test="qzSettingSearchCriteria.group != null and qzSettingSearchCriteria.group != ''">AND qs.fPcGroup = #{qzSettingSearchCriteria.group}</if>
            </when>
            <when test="qzSettingSearchCriteria.terminalType == 'Phone'">
                AND qs.fPhoneGroup &gt; ''
                <if test="qzSettingSearchCriteria.group != null and qzSettingSearchCriteria.group != ''">AND qs.fPhoneGroup = #{qzSettingSearchCriteria.group}</if>
            </when>
        </choose>
        <if test="qzSettingSearchCriteria.updateStatus != null and qzSettingSearchCriteria.updateStatus != ''">AND qs.fUpdateStatus = #{qzSettingSearchCriteria.updateStatus}</if>
        <if test="qzSettingSearchCriteria.status != null">AND qs.fStatus = #{qzSettingSearchCriteria.status}</if>
        <if test="qzSettingSearchCriteria.renewalStatus != null">AND qs.fRenewalStatus = #{qzSettingSearchCriteria.renewalStatus}</if>
        <if test="qzSettingSearchCriteria.autoCrawlKeywordFlag != null">AND qs.fAutoCrawlKeywordFlag = #{qzSettingSearchCriteria.autoCrawlKeywordFlag}</if>
        <if test="qzSettingSearchCriteria.standardSpecies != null and qzSettingSearchCriteria.standardSpecies != ''">
            AND EXISTS (
                SELECT 1
                FROM t_qz_keyword_rank_info qk
                WHERE qk.fQZSettingUuid = qs.fUuid
                AND qk.fDataProcessingStatus = 1
                AND qk.fTerminalType = #{qzSettingSearchCriteria.terminalType}
                AND qk.fWebsiteType = #{qzSettingSearchCriteria.standardSpecies}
            )
        </if>
        <if test="qzSettingSearchCriteria.optimizationType != null">
            AND EXISTS (
                SELECT 1
                FROM t_qz_operation_type qot
                WHERE qs.fUuid = qot.fQZSettingUuid
                AND qot.fOperationtype = #{qzSettingSearchCriteria.terminalType}
                AND qot.fOptimizationType = #{qzSettingSearchCriteria.optimizationType}
                AND qot.fIsDeleted = 0
            )
        </if>
        <if test="qzSettingSearchCriteria.checkStatus != null">
            AND EXISTS (
                SELECT 1
                FROM t_qz_keyword_rank_info qk
                WHERE qk.fQZSettingUuid = qs.fUuid
                AND qk.fTerminalType = #{qzSettingSearchCriteria.terminalType}
            <choose>
                <when test="qzSettingSearchCriteria.checkStatus == 1">
                    AND qk.fIncrease &lt;= -0.1
                    AND qk.fOneWeekDifference &lt;= -5
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 2">
                    AND qk.fIncrease = 0
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 3">
                    AND qk.fIncrease &gt;= 0.1
                    AND qk.fOneWeekDifference &gt;= 5
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 4">
                    AND qk.fAchieveLevel &gt; 0
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 5">
                    AND qk.fAchieveLevel = 0
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 6">
                    AND qk.fDifferenceValue &lt;= 0.1
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 7">
                    AND qk.fTodayDifference &lt; 0
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 8">
                    AND qk.fTodayDifference = 0
                </when>
                <when test="qzSettingSearchCriteria.checkStatus == 9">
                    AND qk.fTodayDifference &gt; 0
                </when>
            </choose>
                AND qk.fDataProcessingStatus = 1
            )
        </if>
        <if test="qzSettingSearchCriteria.categoryTag != null and qzSettingSearchCriteria.categoryTag != ''">
            AND EXISTS (SELECT 1 FROM t_qz_category_tag qc WHERE qc.fQZSettingUuid = qs.fUuid AND qc.fTagName = #{qzSettingSearchCriteria.categoryTag})
        </if>
        <if test="qzSettingSearchCriteria.operationType != null and qzSettingSearchCriteria.operationType != ''">
            AND EXISTS (
                SELECT 1
                FROM t_machine_info mi
                WHERE mi.fUsingOperationType = #{qzSettingSearchCriteria.operationType}
                <choose>
                    <when test="qzSettingSearchCriteria.terminalType == 'PC'">
                        AND mi.fGroup = qs.fPcGroup
                    </when>
                    <otherwise>
                        AND mi.fGroup = qs.fPhoneGroup
                    </otherwise>
                </choose>
                AND mi.fTerminalType = #{qzSettingSearchCriteria.terminalType}
            )
        </if>
        <if test="qzSettingSearchCriteria.createTime != null and qzSettingSearchCriteria.createTime != ''">AND qs.fCreateTime &gt;= #{qzSettingSearchCriteria.createTime}</if>
        <if test="qzSettingSearchCriteria.createTimePrefix != null and qzSettingSearchCriteria.createTimePrefix != ''">AND qs.fCreateTime &lt;= #{qzSettingSearchCriteria.createTimePrefix}</if>
        <choose>
            <when test="qzSettingSearchCriteria.dateRangeType == 0">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate = CURDATE())
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == -1">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate &lt; CURDATE())
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == 3">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate BETWEEN
                date_add(CURDATE(), INTERVAL 1 DAY) AND date_add(CURDATE(), INTERVAL 3 DAY))
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == 7">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate BETWEEN
                date_add(CURDATE(), INTERVAL 4 DAY) AND date_add(CURDATE(), INTERVAL 7 DAY))
            </when>
            <otherwise>

            </otherwise>
        </choose>
        ORDER BY qs.fUpdateTime
    </select>

    <select id="searchQZSettingsByUuids" resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
          qs.fUuid            AS 'uuid',
          qs.fCustomerUuid    AS 'customerUuid',
          qs.fDomain          AS 'domain',
          qs.fPcGroup         AS 'pcGroup',
          qs.fPhoneGroup      AS 'phoneGroup',
          qs.fType            AS 'type',
          qs.fIgnoreNoIndex   AS 'ignoreNoIndex',
          qs.fIgnoreNoOrder   AS 'ignoreNoOrder',
          qs.fUpdateInterval  AS 'updateInterval',
          qs.fUpdateStatus    AS 'updateStatus',
          qs.fUpdateStartTime AS 'updateStartTime',
          qs.fUpdateEndTime   AS 'updateEndTime',
          qs.fUpdateTime      AS 'updateTime',
          qs.fCreateTime      AS 'createTime',
          qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
          qs.fCaptureCurrentKeywordStatus      AS 'captureCurrentKeywordStatus'
        FROM t_qz_setting qs
        WHERE qs.fUuid IN (#{uuids})
    </select>

    <select id="selectLastId" resultType="int">
        select LAST_INSERT_ID()
    </select>

    <update id="updateQZSettingGroup" parameterType="com.keymanager.monitoring.entity.QZSetting">
        UPDATE t_qz_setting
        SET fPcGroup = #{qzSetting.pcGroup},fPhoneGroup = #{qzSetting.phoneGroup}
        WHERE fUuid = #{qzSetting.uuid}
    </update>

    <update id="updateQZSettingStatus">
        UPDATE t_qz_setting
        SET 1 = 1
        <if test="status == 3">
            , fAutoCrawlKeywordFlag = FALSE
        </if>
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateImmediately" parameterType="java.lang.String">
        UPDATE t_qz_setting
        SET fUpdateStatus = NULL,
            fUpdateTime = NOW(),
            fUpdateEndTime = NULL,
            fAutoCrawlKeywordFlag = 1
        WHERE fUuid IN (${uuids})
    </update>

    <update id="updateExceedMaxCountFlag">
        UPDATE t_qz_setting
        SET fPcKeywordExceedMaxCount = #{pcKeywordExceedMaxCount}, fPhoneKeywordExceedMaxCount = #{phoneKeywordExceedMaxCount}
    </update>

    <update id="updatePCExceedMaxCountFlag">
        UPDATE t_qz_setting
        SET fPcKeywordExceedMaxCount = #{pcKeywordExceedMaxCount}
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updatePhoneExceedMaxCountFlag">
        UPDATE t_qz_setting
        SET fPhoneKeywordExceedMaxCount = #{phoneKeywordExceedMaxCount}
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="getKeywordExceedMaxCount" resultType="java.lang.Long">
        SELECT qz.fQZSettingUuid
        FROM
        (
            SELECT qot.fQZSettingUuid, qot.fMaxKeywordCount
            FROM t_qz_operation_type qot
            LEFT JOIN t_customer_keyword ck
            ON qot.fGroup = ck.fOptimizeGroupName
            WHERE ck.fType = 'qz'
            AND ck.fTerminalType = #{operationType}
            AND ck.fStatus > 0
            AND qot.fIsDeleted = 0
            GROUP BY qot.fUuid
            HAVING COUNT(1) > qot.fMaxKeywordCount
        ) qz;
    </select>

    <update id="updateQzSetting">
        update t_qz_setting
        <set>
            <if test="qzSetting.crawlerTime != null">fCrawlerTime = #{qzSetting.crawlerTime},</if>
            <if test="qzSetting.crawlerStatus != null and qzSetting.crawlerStatus != ''">fCrawlerStatus = #{qzSetting.crawlerStatus}</if>
        </set>
        WHERE fUuid = #{qzSetting.uuid}
    </update>

    <select id="getQZSettingTask" resultType="com.keymanager.monitoring.vo.ExternalQzSettingVO">
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain'
        FROM t_qz_setting qs
        WHERE qs.fCrawlerStatus = 'new'
        AND qs.fSearchEngine = '百度'
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        LIMIT #{taskNumber}
        UNION ALL
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain'
        FROM t_qz_setting qs
        WHERE qs.fCrawlerStatus = 'processing'
        AND qs.fCrawlerTime &lt;= DATE_SUB(NOW(), INTERVAL 10 MINUTE)
        AND qs.fSearchEngine = '百度'
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        LIMIT #{taskNumber}
        UNION ALL
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain'
        FROM t_qz_setting qs
        WHERE qs.fCrawlerStatus = 'finish'
        AND qs.fCrawlerTime &lt;= DATE_SUB(NOW(), INTERVAL #{crawlerHour} HOUR)
        AND qs.fSearchEngine = '百度'
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        LIMIT #{taskNumber}
    </select>

    <update id="updateCrawlerStatus">
        update t_qz_setting
        SET fCrawlerStatus = 'processing', fCrawlerTime = NOW()
        WHERE fUuid IN
        <foreach collection="uuids" item="uuid" open="(" separator="," close=")">
            #{uuid}
        </foreach>
    </update>

    <select id="getQZSettingGroupInfo" resultType="java.util.Map">
        SELECT
        COUNT(ck.fStatus = 1 OR NULL) AS 'activeCount',
        COUNT(ck.fStatus = 0 OR NULL) AS 'stopCount'
        FROM t_customer_keyword ck
        WHERE ck.fCustomerUuid = #{customerUuid}
        AND ck.fOptimizeGroupName = #{optimizeGroupName}
        AND ck.fType = 'qz'
        AND ck.fTerminalType = #{terminalType}
    </select>

    <select id="getAvailableOptimizationGroups" resultType="java.lang.String">
        SELECT
        <choose>
            <when test="groupSettingCriteria.terminalType =='PC'">
                qs.fPcGroup AS 'groupName'
            </when>
            <otherwise>
                qs.fPhoneGroup AS 'groupName'
            </otherwise>
        </choose>
        FROM t_qz_setting qs
        WHERE (qs.fRenewalStatus = 1 OR qs.fRenewalStatus = 2)
        <choose>
            <when test="groupSettingCriteria.terminalType =='PC'">
                AND qs.fPcGroup > ''
            </when>
            <otherwise>
                AND qs.fPhoneGroup > ''
            </otherwise>
        </choose>
        <if test="groupSettingCriteria.optimizedGroupName != null and groupSettingCriteria.optimizedGroupName != ''">
            <choose>
                <when test="groupSettingCriteria.terminalType =='PC'">
                    AND qs.fPcGroup LIKE '${groupSettingCriteria.optimizedGroupName}%'
                </when>
                <otherwise>
                    AND qs.fPhoneGroup LIKE '${groupSettingCriteria.optimizedGroupName}%'
                </otherwise>
            </choose>
        </if>
        GROUP BY
        <choose>
            <when test="groupSettingCriteria.terminalType =='PC'">
                qs.fPcGroup
            </when>
            <otherwise>
                qs.fPhoneGroup
            </otherwise>
        </choose>
    </select>

    <select id="searchQZSettingSearchEngines" resultType="com.keymanager.monitoring.vo.QZSettingVO">
        SELECT
            qs.fSearchEngine  AS 'searchEngine',
            qs.fPcGroup       AS 'pcGroup',
            qs.fPhoneGroup    AS 'phoneGroup'
        FROM t_qz_setting qs
        WHERE 1 = 1
        <if test="customerUuid != null and customerUuid != ''">AND qs.fCustomerUuid = #{customerUuid}</if>
        <if test="domain != null and domain != ''">AND qs.fDomain = #{domain}</if>
    </select>

    <update id="updateQZSettingRenewalStatus">
        UPDATE t_qz_setting
        SET fUpdateTime = NOW(),
            fRenewalStatus = #{renewalStatus}
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
        <choose>
            <when test="renewalStatus == 1">
                AND fRenewalStatus = 0
            </when>
            <otherwise>
                AND fRenewalStatus = 1
            </otherwise>
        </choose>
    </update>

    <select id="findQZCustomer" resultType="java.lang.String">
        SELECT CONCAT(c.fUserID, '##', c.fContactPerson)
        FROM t_qz_setting qs
        LEFT JOIN t_customer c
        ON c.fUuid = qs.fCustomerUuid
        WHERE qs.fDomain LIKE '${domain}%'
        LIMIT 1
        UNION ALL
        SELECT CONCAT(c.fUserID, '##', c.fContactPerson)
        FROM t_customer c
        WHERE c.fEntryType = 'qz'
        AND c.fContactPerson LIKE '${domain}%'
        LIMIT 1
    </select>

    <select id="searchAllQZSettingForGenerateRankingCurve" resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
            qs.fUuid         AS 'uuid',
            qs.fCustomerUuid AS 'customerUuid',
            qs.fPcGroup      AS 'pcGroup',
            qs.fPhoneGroup   AS 'phoneGroup'
        FROM t_qz_setting qs
        WHERE EXISTS(SELECT 1 FROM t_customer c WHERE c.fUuid = qs.fCustomerUuid)
        AND qs.fSearchEngine IN ('百度', '搜狗', '360')
    </select>
    
    <select id="selectQZSettingForAutoOperate" resultType="com.keymanager.monitoring.vo.ExternalQzSettingVO">
        SELECT
            qzs.fUuid AS 'uuid',
            qzs.fDomain AS 'domain',
            qzs.fCustomerUuid AS 'customerUuid',
            qzs.fType As 'type',
	        qzs.fBearPawNumber AS 'bearPawNumber'
        FROM t_qz_setting qzs
        WHERE
        (qzs.fUpdateStatus IS NULL
            OR qzs.fUpdateEndTime IS NULL
            OR (qzs.fUpdateStatus = 'Completed'
            AND qzs.fUpdateEndTime &lt; DATE_SUB(CURRENT_DATE(), INTERVAL qzs.fUpdateInterval DAY))
            OR (qzs.fUpdateStatus = 'Processing'
            AND DATE_SUB(NOW(), INTERVAL 10 MINUTE) > qzs.fUpdateStartTime)
            OR (qzs.fUpdateStatus = 'DownloadTimesUsed'
            AND qzs.fUpdateEndTime &lt; CURRENT_DATE())
        )
        AND qzs.fType = 'qz'
        AND (qzs.fRenewalStatus = 1 OR qzs.fRenewalStatus = 2)
        AND qzs.fAutoCrawlKeywordFlag = 1
        ORDER BY qzs.fUuid
        LIMIT 1
    </select>

    <select id="getQZSettingByCustomerUuid" resultType="com.keymanager.monitoring.vo.QZSettingForSync">
        SELECT
            qs.fUuid AS 'qsId',
            qs.fCustomerUuid AS 'customerId',
            qs.fDomain AS 'domain',
            qs.fSearchEngine AS 'searchEngine',
            qs.fBearPawNumber AS 'bearPawId',
            qs.fRenewalStatus AS 'renewalStatus',
            qs.fPcGroup AS 'pcGroup',
            qs.fPhoneGroup AS 'phoneGroup'
        FROM t_qz_setting qs
        WHERE qs.fCustomerUuid = #{customerUuid}
    </select>

    <select id="getAvailableQZSettingsByTagName" resultType="com.keymanager.monitoring.vo.QZSettingForSync">
        SELECT
            qs.fUuid AS 'qsId',
            qs.fCustomerUuid AS 'customerId',
            qs.fDomain AS 'domain',
            qs.fSearchEngine AS 'searchEngine',
            qs.fBearPawNumber AS 'bearPawId',
            qs.fRenewalStatus AS 'renewalStatus',
            qs.fPcGroup AS 'pcGroup',
            qs.fPhoneGroup AS 'phoneGroup'
        FROM t_qz_setting qs
        WHERE (qs.fRenewalStatus = 1 OR qs.fRenewalStatus = 2)
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        AND EXISTS (SELECT 1 FROM t_qz_category_tag qct WHERE qct.fQZSettingUuid = qs.fUuid AND qct.fTagName = #{qzCustomerTag})
    </select>

    <insert id="replaceQZSettings">
        REPLACE INTO sys_qz_setting VALUES
        <foreach collection="qzSettingForSyncs" item="qzSettingForSync" separator=",">
            (
            #{qzSettingForSync.qsId},
            #{qzSettingForSync.customerId},
            #{qzSettingForSync.domain},
            #{qzSettingForSync.searchEngine},
            #{qzSettingForSync.bearPawId},
            #{qzSettingForSync.renewalStatus},
            #{qzSettingForSync.pcGroup},
            #{qzSettingForSync.phoneGroup},
            #{qzCustomerTag}
            )
        </foreach>
    </insert>

    <delete id="deleteSysQzSettings">
        DELETE FROM sys_qz_setting WHERE COMPANY_CODE = #{qzCustomerTag}
    </delete>
</mapper>