<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keymanager.monitoring.dao.QZSettingDao">
    <select id="getAvailableQZSettings" resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
            qs.fUuid                           AS 'uuid',
            qs.fCustomerUuid                   AS 'customerUuid',
            qs.fDomain                         AS 'domain',
              qs.fBearPawNumber   AS 'bearPawNumber',
            qs.fPcGroup                        AS 'pcGroup',
            qs.fPhoneGroup                     AS 'phoneGroup',
            qs.fType                           AS 'type',
            qs.fIgnoreNoIndex                  AS 'ignoreNoIndex',
            qs.fIgnoreNoOrder                  AS 'ignoreNoOrder',
            qs.fUpdateInterval                 AS 'updateInterval',
            qs.fUpdateStatus                   AS 'updateStatus',
            qs.fUpdateStartTime                AS 'updateStartTime',
            qs.fUpdateEndTime                  AS 'updateEndTime',
            qs.fUpdateTime                     AS 'updateTime',
            qs.fCreateTime                     AS 'createTime',
            qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
            qs.fCaptureCurrentKeywordStatus    AS 'captureCurrentKeywordStatus'
        FROM t_qz_setting qs
        WHERE (qs.fUpdateStatus IS NULL
               OR qs.fUpdateEndTime IS NULL
               OR (qs.fUpdateStatus = 'Completed'
                   AND DATE_SUB(NOW(), INTERVAL qs.fUpdateInterval DAY) > qs.fUpdateEndTime)
               OR (qs.fUpdateStatus = 'Processing'
                   AND DATE_SUB(NOW(), INTERVAL 10 MINUTE) > qs.fUpdateStartTime)
               OR (qs.fUpdateStatus = 'DownloadTimesUsed'
                   AND DATE_SUB(NOW(), INTERVAL 1 DAY) > qs.fUpdateEndTime)
              ) AND qs.fStatus = 1
              AND ((qs.fPcGroup > '' AND qs.fPcKeywordExceedMaxCount = 0)
              OR  (qs.fPhoneGroup > '' AND qs.fPhoneKeywordExceedMaxCount = 0))
        ORDER BY qs.fUpdateEndTime
    </select>

    <select id="captureCurrentKeyword" resultType="com.keymanager.monitoring.entity.QZSetting">
       SELECT
            DISTINCT qs.fUuid AS 'uuid',
            qs.fCustomerUuid AS 'customerUuid',
            qs.fDomain AS 'domain',
            qs.fPcGroup AS 'pcGroup',
            qs.fPhoneGroup AS 'phoneGroup',
            qs.fType AS 'type',
            qs.fIgnoreNoIndex AS 'ignoreNoIndex',
            qs.fIgnoreNoOrder AS 'ignoreNoOrder',
            qs.fUpdateInterval AS 'updateInterval',
            qs.fUpdateStatus AS 'updateStatus',
            qs.fUpdateStartTime AS 'updateStartTime',
            qs.fUpdateEndTime AS 'updateEndTime',
            qs.fUpdateTime AS 'updateTime',
            qs.fCreateTime AS 'createTime',
            qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
            qs.fCaptureCurrentKeywordStatus AS 'captureCurrentKeywordStatus'
        FROM
            t_qz_setting qs
        JOIN t_qz_operation_type qt ON qs.fUuid = qt.fQZSettingUuid
        WHERE
            qt.fUuid IN(
                SELECT
                    qr.fQZOperationTypeUuid
                FROM
                    t_qz_charge_rule qr
            )
        AND qs.fCaptureCurrentKeywordStatus IS NULL
        OR (
            qs.fCaptureCurrentKeywordStatus = 'Completed'
            AND DATE_SUB(NOW(), INTERVAL 12 HOUR) > qs.fCaptureCurrentKeywordCountTime
        )
        OR (
            qs.fCaptureCurrentKeywordStatus = 'Processing'
            AND DATE_SUB(NOW(), INTERVAL 10 MINUTE) > qs.fCaptureCurrentKeywordCountTime
        )
        AND qs.fStatus = 1
        ORDER BY qs.fCaptureCurrentKeywordCountTime
    </select>

    <select id="getChargeRemindData" resultType="com.keymanager.monitoring.vo.DateRangeTypeVO">
        SELECT DISTINCT
          qs.fUuid AS "uuid",
          ot.fNextChargeDate AS "nextChargeDate"
        FROM
        t_qz_setting qs,
        t_qz_operation_type ot
        WHERE
        qs.fUuid = ot.fQZSettingUuid
        AND ot.fNextChargeDate &lt;= date_add(CURDATE(), INTERVAL 7 DAY)
        AND ot.fIsDeleted = 0
        AND qs.fStatus = 1
    </select>

    <select id="searchQZSettings" parameterType="com.keymanager.monitoring.criteria.QZSettingSearchCriteria"
            resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
        qs.fUuid AS 'uuid',
        c.fUserID AS 'userID',
        qs.fCustomerUuid AS 'customerUuid',
        c.fContactPerson AS 'contactPerson',
        qs.fDomain AS 'domain',
        qs.fPcGroup AS 'pcGroup',
        qs.fPhoneGroup AS 'phoneGroup',
        qs.fType AS 'type',
        qs.fIgnoreNoIndex AS 'ignoreNoIndex',
        qs.fIgnoreNoOrder AS 'ignoreNoOrder',
        qs.fUpdateInterval AS 'updateInterval',
        qs.fUpdateStatus AS 'updateStatus',
        qs.fUpdateStartTime AS 'updateStartTime',
        qs.fUpdateEndTime AS 'updateEndTime',
        qs.fUpdateTime AS 'updateTime',
        qs.fCreateTime AS 'createTime',
        qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
        qs.fCaptureCurrentKeywordStatus AS 'captureCurrentKeywordStatus',
        qs.fStatus AS 'status'
        FROM t_qz_setting qs
        JOIN t_customer c
        ON qs.fCustomerUuid = c.fUuid
        WHERE 1 = 1
        <if test="qzSettingSearchCriteria.loginName != null and qzSettingSearchCriteria.loginName != ''">AND c.fUserID = #{qzSettingSearchCriteria.loginName}</if>
        <if test="qzSettingSearchCriteria.customerUuid != null and qzSettingSearchCriteria.customerUuid != ''">AND qs.fCustomerUuid = #{qzSettingSearchCriteria.customerUuid}</if>
        <if test="qzSettingSearchCriteria.domain != null and qzSettingSearchCriteria.domain != ''">AND qs.fDomain = #{qzSettingSearchCriteria.domain}</if>
        <if test="qzSettingSearchCriteria.group != null and qzSettingSearchCriteria.group != ''">AND (qs.fPcGroup = #{qzSettingSearchCriteria.group} or qs.fPhoneGroup = #{qzSettingSearchCriteria.group})</if>
        <if test="qzSettingSearchCriteria.updateStatus != null and qzSettingSearchCriteria.updateStatus != ''">AND qs.fUpdateStatus = #{qzSettingSearchCriteria.updateStatus}</if>
        <if test="qzSettingSearchCriteria.status != null">AND qs.fStatus = #{qzSettingSearchCriteria.status}</if>
        <choose>
            <when test="qzSettingSearchCriteria.dateRangeType == 0">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate = CURDATE())
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == -1">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate &lt; CURDATE())
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == 3">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate BETWEEN
                date_add(CURDATE(), INTERVAL 1 DAY) AND date_add(CURDATE(), INTERVAL 3 DAY))
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == 7">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate BETWEEN
                date_add(CURDATE(), INTERVAL 4 DAY) AND date_add(CURDATE(), INTERVAL 7 DAY))
            </when>
            <otherwise>

            </otherwise>
        </choose>
        order by qs.fUpdateEndTime
    </select>

    <select id="searchQZSettingsByUuids" resultType="com.keymanager.monitoring.entity.QZSetting">
        SELECT
          qs.fUuid            AS 'uuid',
          qs.fCustomerUuid    AS 'customerUuid',
          qs.fDomain          AS 'domain',
          qs.fPcGroup         AS 'pcGroup',
          qs.fPhoneGroup      AS 'phoneGroup',
          qs.fType            AS 'type',
          qs.fIgnoreNoIndex   AS 'ignoreNoIndex',
          qs.fIgnoreNoOrder   AS 'ignoreNoOrder',
          qs.fUpdateInterval  AS 'updateInterval',
          qs.fUpdateStatus    AS 'updateStatus',
          qs.fUpdateStartTime AS 'updateStartTime',
          qs.fUpdateEndTime   AS 'updateEndTime',
          qs.fUpdateTime      AS 'updateTime',
          qs.fCreateTime      AS 'createTime',
          qs.fCaptureCurrentKeywordCountTime AS 'captureCurrentKeywordCountTime',
        qs.fCaptureCurrentKeywordStatus      AS 'captureCurrentKeywordStatus'
        FROM t_qz_setting qs
        WHERE qs.fUuid IN (#{uuids})
    </select>

    <select id="selectLastId" resultType="int">
        select LAST_INSERT_ID()
    </select>

    <update id="deleteQZSettingGroup" parameterType="com.keymanager.monitoring.entity.QZSetting">
        UPDATE t_qz_setting
        SET fPcGroup = #{qzSetting.pcGroup},fPhoneGroup = #{qzSetting.phoneGroup}
        WHERE fUuid = #{qzSetting.uuid}
    </update>

    <update id="updateQZSettingStatus">
        UPDATE t_qz_setting
        SET fStatus = #{status}
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateImmediately" parameterType="java.lang.String">
        UPDATE t_qz_setting  qs
        SET qs.fUpdateStatus = NULL,
            qs.fUpdateTime = NOW(),
            qs.fUpdateEndTime = NULL
        WHERE qs.fUuid IN (${uuids})
    </update>

    <update id="updateExceedMaxCountFlag">
        UPDATE t_qz_setting
        SET fPcKeywordExceedMaxCount = #{pcKeywordExceedMaxCount}, fPhoneKeywordExceedMaxCount = #{phoneKeywordExceedMaxCount}
    </update>

    <update id="updatePCExceedMaxCountFlag">
        UPDATE t_qz_setting
        SET fPcKeywordExceedMaxCount = #{pcKeywordExceedMaxCount}
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updatePhoneExceedMaxCountFlag">
        UPDATE t_qz_setting
        SET fPhoneKeywordExceedMaxCount = #{phoneKeywordExceedMaxCount}
        WHERE fUuid IN
        <foreach item="item" index="index" collection="uuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="getPCKeywordExceedMaxCount" resultType="java.lang.Long">
        SELECT
          qs.fUuid
        FROM t_qz_setting qs
          LEFT JOIN t_customer_keyword ck
            ON qs.fPcGroup = ck.fOptimizeGroupName
        WHERE ck.fType = 'qz'
            AND ck.fTerminalType = 'PC'
            AND ck.fStatus > 0
        GROUP BY qs.fUuid
        HAVING COUNT(1) > #{maxCount}
    </select>

    <select id="getPhoneKeywordExceedMaxCount" resultType="java.lang.Long">
        SELECT
        qs.fUuid
        FROM t_qz_setting qs
        LEFT JOIN t_customer_keyword ck
        ON qs.fPhoneGroup = ck.fOptimizeGroupName
        WHERE ck.fType = 'qz'
        AND ck.fTerminalType = 'Phone'
        AND ck.fStatus > 0
        GROUP BY qs.fUuid
        HAVING COUNT(1) > #{maxCount}
    </select>
</mapper>