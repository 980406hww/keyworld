<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keymanager.ckadmin.dao.QZSettingDao">
    <select id="searchQZSettings" resultType="com.keymanager.ckadmin.entity.QZSetting">
        SELECT
        qs.fUuid AS 'uuid',
        c.fUserID AS 'userID',
        qs.fCustomerUuid AS 'customerUuid',
        c.fContactPerson AS 'contactPerson',
        o.fOrganizationName AS 'organizationName',
        qs.fDomain AS 'domain',
        qs.fSearchEngine AS 'searchEngine',
        qs.fBearPawNumber AS 'bearPawNumber',
        <choose>
            <when test="qzSettingSearchCriteria.terminalType == 'PC'">
                qs.fPcGroup AS 'pcGroup',
            </when>
            <when test="qzSettingSearchCriteria.terminalType == 'Phone'">
                qs.fPhoneGroup AS 'phoneGroup',
            </when>
        </choose>
        qs.fType AS 'type',
        qs.fCreateTime AS 'createTime',
        qs.fRenewalStatus AS 'renewalStatus',
        qs.fCrawlerStatus AS 'crawlerStatus',
        qs.fAutoCrawlKeywordFlag AS 'autoCrawlKeywordFlag',
        qs.fChargeStatusUuid AS 'chargeStatusUuid'
        FROM t_qz_setting qs
        JOIN t_customer c
        ON qs.fCustomerUuid = c.fUuid
        LEFT JOIN t_userinfo u
        ON u.fLoginName = c.fUserID
        LEFT JOIN t_organization o
        ON o.fUuid = u.fOrganizationID
        WHERE 1 = 1
        <if test="qzSettingSearchCriteria.loginName != null and qzSettingSearchCriteria.loginName != ''">AND c.fUserID = #{qzSettingSearchCriteria.loginName}
        </if>
        <if test="qzSettingSearchCriteria.organizationID != null and qzSettingSearchCriteria.organizationID != ''">AND o.fUuid =
            #{qzSettingSearchCriteria.organizationID}
        </if>
        <if test="qzSettingSearchCriteria.customerUuid != null and qzSettingSearchCriteria.customerUuid != ''">AND qs.fCustomerUuid =
            #{qzSettingSearchCriteria.customerUuid}
        </if>
        <if test="qzSettingSearchCriteria.domain != null and qzSettingSearchCriteria.domain != ''">AND qs.fDomain = #{qzSettingSearchCriteria.domain}</if>
        <if test="qzSettingSearchCriteria.userInfoID != null and qzSettingSearchCriteria.userInfoID != ''">AND u.fUuid = #{qzSettingSearchCriteria.userInfoID}
        </if>
        <if test="qzSettingSearchCriteria.searchEngine != 'All'">AND qs.fSearchEngine = #{qzSettingSearchCriteria.searchEngine}</if>
        <choose>
            <when test="qzSettingSearchCriteria.terminalType == 'PC'">
                AND qs.fPcGroup &gt; ''
                <if test="qzSettingSearchCriteria.group != null and qzSettingSearchCriteria.group != ''">AND qs.fPcGroup = #{qzSettingSearchCriteria.group}</if>
            </when>
            <when test="qzSettingSearchCriteria.terminalType == 'Phone'">
                AND qs.fPhoneGroup &gt; ''
                <if test="qzSettingSearchCriteria.group != null and qzSettingSearchCriteria.group != ''">AND qs.fPhoneGroup = #{qzSettingSearchCriteria.group}
                </if>
            </when>
        </choose>
        <if test="qzSettingSearchCriteria.updateStatus != null and qzSettingSearchCriteria.updateStatus != ''">AND qs.fUpdateStatus =
            #{qzSettingSearchCriteria.updateStatus}
        </if>
        <if test="qzSettingSearchCriteria.renewalStatus != null">AND qs.fRenewalStatus = #{qzSettingSearchCriteria.renewalStatus}</if>
        <if test="qzSettingSearchCriteria.autoCrawlKeywordFlag != null">AND qs.fAutoCrawlKeywordFlag = #{qzSettingSearchCriteria.autoCrawlKeywordFlag}</if>
        <if test="qzSettingSearchCriteria.standardSpecies != null and qzSettingSearchCriteria.standardSpecies != ''">
            AND EXISTS (
            SELECT 1
            FROM t_qz_charge_rule qcr
            LEFT JOIN t_qz_operation_type qot
            ON qot.fUuid = qcr.fQZOperationTypeUuid
            WHERE qot.fQZSettingUuid = qs.fUuid
            AND qot.fOperationtype = #{qzSettingSearchCriteria.terminalType}
            AND qot.fIsDeleted = 0
            AND qcr.fStandardSpecies = #{qzSettingSearchCriteria.standardSpecies}
            )
        </if>
        <if test="qzSettingSearchCriteria.optimizationType != null">
            AND EXISTS (
            SELECT 1
            FROM t_qz_operation_type qot
            WHERE qs.fUuid = qot.fQZSettingUuid
            AND qot.fOperationtype = #{qzSettingSearchCriteria.terminalType}
            AND qot.fOptimizationType = #{qzSettingSearchCriteria.optimizationType}
            AND qot.fIsDeleted = 0
            )
        </if>
        <if test="qzSettingSearchCriteria.bzbtSort != null or qzSettingSearchCriteria.dbtjSort != null or qzSettingSearchCriteria.jrqsSort != null">
            AND EXISTS (
            SELECT 1
            FROM t_qz_keyword_rank_info qk
            WHERE qk.fQZSettingUuid = qs.fUuid
            AND qk.fTerminalType = #{qzSettingSearchCriteria.terminalType}
            <if test="qzSettingSearchCriteria.bzbtSort != null">
                <choose>
                    <when test="qzSettingSearchCriteria.bzbtSort == 1">
                        AND qk.fIncrease &lt;= -0.1
                        AND qk.fOneWeekDifference &lt;= -5
                    </when>
                    <when test="qzSettingSearchCriteria.bzbtSort == 2">
                        AND qk.fIncrease = 0
                    </when>
                    <when test="qzSettingSearchCriteria.bzbtSort == 3">
                        AND qk.fIncrease &gt;= 0.1
                        AND qk.fOneWeekDifference &gt;= 5
                    </when>
                </choose>
            </if>
            <if test="qzSettingSearchCriteria.dbtjSort != null">
                <choose>
                    <when test="qzSettingSearchCriteria.dbtjSort == 4">
                        AND qk.fAchieveLevel &gt; 0
                    </when>
                    <when test="qzSettingSearchCriteria.dbtjSort == 5">
                        AND qk.fAchieveLevel = 0
                    </when>
                    <when test="qzSettingSearchCriteria.dbtjSort == 6">
                        AND qk.fDifferenceValue &lt;= 0.1
                    </when>
                </choose>
            </if>
            <if test="qzSettingSearchCriteria.jrqsSort != null">
                <choose>
                    <when test="qzSettingSearchCriteria.jrqsSort == 7">
                        AND qk.fTodayDifference &lt; 0
                    </when>
                    <when test="qzSettingSearchCriteria.jrqsSort == 8">
                        AND qk.fTodayDifference = 0
                    </when>
                    <when test="qzSettingSearchCriteria.jrqsSort == 9">
                        AND qk.fTodayDifference &gt; 0
                    </when>
                </choose>
            </if>
            AND qk.fDataProcessingStatus = 1
            )
        </if>
        <if test="qzSettingSearchCriteria.categoryTag != null and qzSettingSearchCriteria.categoryTag != ''">
            AND EXISTS (SELECT 1 FROM t_qz_category_tag qc WHERE qc.fQZSettingUuid = qs.fUuid AND qc.fTagName = #{qzSettingSearchCriteria.categoryTag})
        </if>
        <if test="qzSettingSearchCriteria.createTime != null and qzSettingSearchCriteria.createTime != ''">AND qs.fCreateTime &gt;=
            #{qzSettingSearchCriteria.createTime}
        </if>
        <if test="qzSettingSearchCriteria.createTimePrefix != null and qzSettingSearchCriteria.createTimePrefix != ''">AND qs.fCreateTime &lt;=
            #{qzSettingSearchCriteria.createTimePrefix}
        </if>
        <choose>
            <when test="qzSettingSearchCriteria.dateRangeType == 0">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate = CURDATE())
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == -1">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate &lt; CURDATE())
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == 3">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate BETWEEN
                date_add(CURDATE(), INTERVAL 1 DAY) AND date_add(CURDATE(), INTERVAL 3 DAY))
            </when>
            <when test="qzSettingSearchCriteria.dateRangeType == 7">
                AND EXISTS (select qs.fUuid from t_qz_operation_type ot where qs.fUuid = ot.fQZSettingUuid and ot.fNextChargeDate BETWEEN
                date_add(CURDATE(), INTERVAL 4 DAY) AND date_add(CURDATE(), INTERVAL 7 DAY))
            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select>

    <select id="searchQZSettingSearchEngines" resultType="com.keymanager.ckadmin.vo.QZSettingVO">
        SELECT
        qs.fSearchEngine AS 'searchEngine',
        qs.fPcGroup AS 'pcGroup',
        qs.fPhoneGroup AS 'phoneGroup'
        FROM t_qz_setting qs
        WHERE 1 = 1
        <if test="customerUuid != null and customerUuid != ''">AND qs.fCustomerUuid = #{customerUuid}
        </if>
        <if test="domain != null and domain != ''">AND qs.fDomain = #{domain}</if>
    </select>

    <select id="getQZSettingGroupInfo" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM t_customer_keyword ck
        WHERE ck.fOptimizeGroupName = #{optimizeGroupName}
        AND ck.fType = 'qz'
        AND ck.fTerminalType = #{terminalType}
        AND ck.fStatus = 1
    </select>

    <select id="findQZCustomer" resultType="java.lang.String">
        SELECT CONCAT(c.fUserID, '##', c.fContactPerson)
        FROM t_qz_setting qs
        LEFT JOIN t_customer c
        ON c.fUuid = qs.fCustomerUuid
        WHERE qs.fDomain LIKE '${domain}%'
        LIMIT 1
        UNION ALL
        SELECT CONCAT(c.fUserID, '##', c.fContactPerson)
        FROM t_customer c
        WHERE c.fEntryType = 'qz'
        AND c.fContactPerson LIKE '${domain}%'
        LIMIT 1
    </select>

    <select id="selectLastId" resultType="int">
        select LAST_INSERT_ID()
    </select>

    <update id="updateQZSettingGroup">
        UPDATE t_qz_setting
        SET fPcGroup = #{qzSetting.pcGroup},fPhoneGroup = #{qzSetting.phoneGroup}
        WHERE fUuid = #{qzSetting.uuid}
    </update>

    <update id="batchUpdateQZSettingUpdateStatus">
        UPDATE t_qz_setting
        SET fUpdateStatus = NULL, fUpdateTime = NOW(), fUpdateEndTime = NULL
        WHERE fAutoCrawlKeywordFlag IS TRUE
        AND fUuid IN (${uuids})
    </update>

    <update id="batchUpdateRenewalStatus">
        UPDATE t_qz_setting
        SET fUpdateTime = NOW(), fRenewalStatus = #{renewalStatus}
        WHERE fUuid IN (${uuids})
    </update>

    <select id="getPCPhoneGroupByUuid" resultType="map">
        SELECT
            fPcGroup AS 'pcGroup',
            fPhoneGroup AS 'phoneGroup'
        FROM t_qz_setting
        WHERE fUuid = #{uuid}
    </select>

    <select id="selectQZSettingForAutoOperate" resultType="java.util.Map">
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain',
            qs.fCustomerUuid  AS 'customerUuid',
            qs.fBearPawNumber AS 'bearPawNumber',
            qs.fIgnoreNoIndex AS 'ignoreNoIndex',
            qs.fIgnoreNoOrder AS 'ignoreNoOrder',
            qs.fCaptureTerminalType AS 'captureTerminalType'
        FROM t_qz_setting qs
        WHERE qs.fType = 'qz'
        AND qs.fRenewalStatus = 1
        AND qs.fAutoCrawlKeywordFlag = 1
        AND qs.fCaptureTerminalType &gt; ''
        AND (qs.fUpdateStatus IS NULL
            OR qs.fUpdateEndTime IS NULL
            OR (qs.fUpdateStatus = 'Completed'
            AND qs.fUpdateEndTime &lt; DATE_SUB(CURRENT_DATE(), INTERVAL qs.fUpdateInterval DAY))
            OR (qs.fUpdateStatus = 'Processing'
            AND DATE_SUB(NOW(), INTERVAL 20 MINUTE) > qs.fUpdateStartTime)
            OR (qs.fUpdateStatus = 'DownloadTimesUsed'
            AND qs.fUpdateEndTime &lt; CURRENT_DATE())
        )
        LIMIT 1
    </select>

    <select id="getQZSettingTask" resultType="com.keymanager.ckadmin.vo.ExternalQZSettingVO">
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain'
        FROM t_qz_setting qs
        WHERE qs.fCrawlerStatus = 'new'
        AND qs.fSearchEngine = '百度'
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        LIMIT #{taskNumber}
        UNION ALL
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain'
        FROM t_qz_setting qs
        WHERE qs.fCrawlerStatus = 'processing'
        AND qs.fCrawlerTime &lt;= DATE_SUB(NOW(), INTERVAL 10 MINUTE)
        AND qs.fSearchEngine = '百度'
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        LIMIT #{taskNumber}
        UNION ALL
        SELECT
            qs.fUuid   AS 'uuid',
            qs.fDomain AS 'domain'
        FROM t_qz_setting qs
        WHERE qs.fCrawlerStatus = 'finish'
        AND qs.fCrawlerTime &lt;= DATE_SUB(NOW(), INTERVAL #{crawlerHour} HOUR)
        AND qs.fSearchEngine = '百度'
        AND EXISTS (SELECT 1 FROM t_customer c WHERE qs.fCustomerUuid = c.fUuid)
        LIMIT #{taskNumber}
    </select>

    <update id="updateCrawlerStatus">
        update t_qz_setting
        SET fCrawlerStatus = 'processing', fCrawlerTime = NOW()
        WHERE fUuid IN
        <foreach collection="uuids" item="uuid" open="(" separator="," close=")">
            #{uuid}
        </foreach>
    </update>

    <update id="updateQzSetting">
        update t_qz_setting
        <set>
            <if test="qzSetting.crawlerTime != null">fCrawlerTime = #{qzSetting.crawlerTime},</if>
            <if test="qzSetting.crawlerStatus != null and qzSetting.crawlerStatus != ''">fCrawlerStatus = #{qzSetting.crawlerStatus}</if>
        </set>
        WHERE fUuid = #{qzSetting.uuid}
    </update>

    <select id="getQZSettingsCountByCustomerUuid" resultType="com.keymanager.ckadmin.vo.QZSettingCountVO">
        SELECT qz.fCustomerUuid              AS 'customerUuid',
               COUNT(1)                      AS 'totalCount',
               SUM(IF(qz.fRenewalStatus = 1 OR qz.fRenewalStatus = 2 , 1, 0)) AS 'activeCount',
               SUM(IF(qz.fRenewalStatus = 0 , 1, 0)) AS 'pauseCount',
               SUM(IF(qz.fRenewalStatus = 3 , 1, 0)) AS 'downCount',
               SUM(IF(qz.fRenewalStatus = 4 , 1, 0)) AS 'otherCount'
        FROM t_qz_setting qz
        WHERE qz.fCustomerUuid = #{customerUuid}
        AND EXISTS ( SELECT 1 FROM t_qz_keyword_rank_info qk WHERE qk.fQZSettingUuid = qz.fUuid AND qk.fTerminalType = 'PC' AND qk.fDataProcessingStatus = 1)
    </select>

    <select id="getAvailableOptimizationGroups" resultType="com.keymanager.ckadmin.vo.GroupVO">
        SELECT
        <choose>
            <when test="groupSettingCriteria.terminalType =='PC'">
                qs.fPcGroup AS 'groupName'
            </when>
            <otherwise>
                qs.fPhoneGroup AS 'groupName'
            </otherwise>
        </choose>
        FROM t_qz_setting qs
        WHERE (qs.fRenewalStatus = 1 OR qs.fRenewalStatus = 2)
        <choose>
            <when test="groupSettingCriteria.terminalType =='PC'">
                AND qs.fPcGroup > ''
            </when>
            <otherwise>
                AND qs.fPhoneGroup > ''
            </otherwise>
        </choose>
        <if test="groupSettingCriteria.optimizedGroupName != null and groupSettingCriteria.optimizedGroupName != ''">
            <choose>
                <when test="groupSettingCriteria.terminalType =='PC'">
                    AND qs.fPcGroup LIKE CONCAT(#{groupSettingCriteria.optimizedGroupName},'%')
                </when>
                <otherwise>
                    AND qs.fPhoneGroup LIKE CONCAT(#{groupSettingCriteria.optimizedGroupName},'%')
                </otherwise>
            </choose>
        </if>
        GROUP BY
        <choose>
            <when test="groupSettingCriteria.terminalType =='PC'">
                qs.fPcGroup
            </when>
            <otherwise>
                qs.fPhoneGroup
            </otherwise>
        </choose>
    </select>

    <update id="updateCustomerUuidByQzUuids">
        UPDATE t_qz_setting
        SET fCustomerUuid = #{customerUuid}
        WHERE fUuid IN
        <foreach item="item" collection="qzUuids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectByUuids" parameterType="java.util.ArrayList" resultType="com.keymanager.ckadmin.entity.QZSetting">
        SELECT fRenewalStatus AS 'renewalStatus',fUuid AS 'uuid',
        fSearchEngine AS 'searchEngine',fPcGroup AS 'pcGroup',
        fPhoneGroup AS 'phoneGroup'
        FROM t_qz_setting
        WHERE fUuid IN
        <foreach collection="uuids" item="uuid" open="(" separator="," close=")">
            #{uuid}
        </foreach>
    </select>
</mapper>